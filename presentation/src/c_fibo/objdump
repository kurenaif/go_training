
a.out:     file format elf64-x86-64


Disassembly of section .interp:

00000000000002a8 <.interp>:
 2a8:	2f                   	(bad)  
 2a9:	6c                   	ins    BYTE PTR es:[rdi],dx
 2aa:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
 2b1:	2d 6c 69 6e 75       	sub    eax,0x756e696c
 2b6:	78 2d                	js     2e5 <_init-0xd1b>
 2b8:	78 38                	js     2f2 <_init-0xd0e>
 2ba:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
 2c0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 2c1:	2e 32 00             	xor    al,BYTE PTR cs:[rax]

Disassembly of section .note.gnu.build-id:

00000000000002c4 <.note.gnu.build-id>:
 2c4:	04 00                	add    al,0x0
 2c6:	00 00                	add    BYTE PTR [rax],al
 2c8:	14 00                	adc    al,0x0
 2ca:	00 00                	add    BYTE PTR [rax],al
 2cc:	03 00                	add    eax,DWORD PTR [rax]
 2ce:	00 00                	add    BYTE PTR [rax],al
 2d0:	47                   	rex.RXB
 2d1:	4e 55                	rex.WRX push rbp
 2d3:	00 4b b1             	add    BYTE PTR [rbx-0x4f],cl
 2d6:	b4 27                	mov    ah,0x27
 2d8:	b5 0b                	mov    ch,0xb
 2da:	99                   	cdq    
 2db:	29 39                	sub    DWORD PTR [rcx],edi
 2dd:	f8                   	clc    
 2de:	16                   	(bad)  
 2df:	22 4b 17             	and    cl,BYTE PTR [rbx+0x17]
 2e2:	6b 7e 67 8e          	imul   edi,DWORD PTR [rsi+0x67],0xffffff8e
 2e6:	65 51                	gs push rcx

Disassembly of section .note.ABI-tag:

00000000000002e8 <.note.ABI-tag>:
 2e8:	04 00                	add    al,0x0
 2ea:	00 00                	add    BYTE PTR [rax],al
 2ec:	10 00                	adc    BYTE PTR [rax],al
 2ee:	00 00                	add    BYTE PTR [rax],al
 2f0:	01 00                	add    DWORD PTR [rax],eax
 2f2:	00 00                	add    BYTE PTR [rax],al
 2f4:	47                   	rex.RXB
 2f5:	4e 55                	rex.WRX push rbp
 2f7:	00 00                	add    BYTE PTR [rax],al
 2f9:	00 00                	add    BYTE PTR [rax],al
 2fb:	00 03                	add    BYTE PTR [rbx],al
 2fd:	00 00                	add    BYTE PTR [rax],al
 2ff:	00 02                	add    BYTE PTR [rdx],al
 301:	00 00                	add    BYTE PTR [rax],al
 303:	00 00                	add    BYTE PTR [rax],al
 305:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .gnu.hash:

0000000000000308 <.gnu.hash>:
 308:	02 00                	add    al,BYTE PTR [rax]
 30a:	00 00                	add    BYTE PTR [rax],al
 30c:	0f 00 00             	sldt   WORD PTR [rax]
 30f:	00 01                	add    BYTE PTR [rcx],al
 311:	00 00                	add    BYTE PTR [rax],al
 313:	00 06                	add    BYTE PTR [rsi],al
 315:	00 00                	add    BYTE PTR [rax],al
 317:	00 00                	add    BYTE PTR [rax],al
 319:	00 91 00 01 00 00    	add    BYTE PTR [rcx+0x100],dl
 31f:	00 0f                	add    BYTE PTR [rdi],cl
 321:	00 00                	add    BYTE PTR [rax],al
 323:	00 00                	add    BYTE PTR [rax],al
 325:	00 00                	add    BYTE PTR [rax],al
 327:	00 d0                	add    al,dl
 329:	65 ce                	gs (bad) 
 32b:	6d                   	ins    DWORD PTR es:[rdi],dx
 32c:	15                   	.byte 0x15
 32d:	98                   	cwde   
 32e:	0c 43                	or     al,0x43

Disassembly of section .dynsym:

0000000000000330 <.dynsym>:
	...
 348:	b2 00                	mov    dl,0x0
 34a:	00 00                	add    BYTE PTR [rax],al
 34c:	12 00                	adc    al,BYTE PTR [rax]
	...
 35e:	00 00                	add    BYTE PTR [rax],al
 360:	5f                   	pop    rdi
 361:	00 00                	add    BYTE PTR [rax],al
 363:	00 12                	add    BYTE PTR [rdx],dl
	...
 375:	00 00                	add    BYTE PTR [rax],al
 377:	00 2e                	add    BYTE PTR [rsi],ch
 379:	01 00                	add    DWORD PTR [rax],eax
 37b:	00 12                	add    BYTE PTR [rdx],dl
	...
 38d:	00 00                	add    BYTE PTR [rax],al
 38f:	00 cb                	add    bl,cl
 391:	00 00                	add    BYTE PTR [rax],al
 393:	00 12                	add    BYTE PTR [rdx],dl
	...
 3a5:	00 00                	add    BYTE PTR [rax],al
 3a7:	00 d2                	add    dl,dl
 3a9:	00 00                	add    BYTE PTR [rax],al
 3ab:	00 12                	add    BYTE PTR [rdx],dl
	...
 3bd:	00 00                	add    BYTE PTR [rax],al
 3bf:	00 27                	add    BYTE PTR [rdi],ah
 3c1:	01 00                	add    DWORD PTR [rax],eax
 3c3:	00 12                	add    BYTE PTR [rdx],dl
	...
 3d5:	00 00                	add    BYTE PTR [rax],al
 3d7:	00 f0                	add    al,dh
 3d9:	00 00                	add    BYTE PTR [rax],al
 3db:	00 12                	add    BYTE PTR [rdx],dl
	...
 3ed:	00 00                	add    BYTE PTR [rax],al
 3ef:	00 d8                	add    al,bl
 3f1:	00 00                	add    BYTE PTR [rax],al
 3f3:	00 12                	add    BYTE PTR [rdx],dl
	...
 405:	00 00                	add    BYTE PTR [rax],al
 407:	00 55 00             	add    BYTE PTR [rbp+0x0],dl
 40a:	00 00                	add    BYTE PTR [rax],al
 40c:	12 00                	adc    al,BYTE PTR [rax]
	...
 41e:	00 00                	add    BYTE PTR [rax],al
 420:	1f                   	(bad)  
 421:	00 00                	add    BYTE PTR [rax],al
 423:	00 20                	add    BYTE PTR [rax],ah
	...
 435:	00 00                	add    BYTE PTR [rax],al
 437:	00 4a 01             	add    BYTE PTR [rdx+0x1],cl
 43a:	00 00                	add    BYTE PTR [rax],al
 43c:	12 00                	adc    al,BYTE PTR [rax]
	...
 44e:	00 00                	add    BYTE PTR [rax],al
 450:	10 00                	adc    BYTE PTR [rax],al
 452:	00 00                	add    BYTE PTR [rax],al
 454:	20 00                	and    BYTE PTR [rax],al
	...
 466:	00 00                	add    BYTE PTR [rax],al
 468:	3b 00                	cmp    eax,DWORD PTR [rax]
 46a:	00 00                	add    BYTE PTR [rax],al
 46c:	20 00                	and    BYTE PTR [rax],al
	...
 47e:	00 00                	add    BYTE PTR [rax],al
 480:	9a                   	(bad)  
 481:	00 00                	add    BYTE PTR [rax],al
 483:	00 12                	add    BYTE PTR [rdx],dl
	...
 495:	00 00                	add    BYTE PTR [rax],al
 497:	00 3b                	add    BYTE PTR [rbx],bh
 499:	01 00                	add    DWORD PTR [rax],eax
 49b:	00 22                	add    BYTE PTR [rdx],ah
	...
 4ad:	00 00                	add    BYTE PTR [rax],al
 4af:	00 13                	add    BYTE PTR [rbx],dl
 4b1:	01 00                	add    DWORD PTR [rax],eax
 4b3:	00 11                	add    BYTE PTR [rcx],dl
 4b5:	00 18                	add    BYTE PTR [rax],bl
 4b7:	00 20                	add    BYTE PTR [rax],ah
 4b9:	40 00 00             	add    BYTE PTR [rax],al
 4bc:	00 00                	add    BYTE PTR [rax],al
 4be:	00 00                	add    BYTE PTR [rax],al
 4c0:	10 01                	adc    BYTE PTR [rcx],al
 4c2:	00 00                	add    BYTE PTR [rax],al
 4c4:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynstr:

00000000000004c8 <.dynstr>:
 4c8:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
 4cc:	73 74                	jae    542 <_init-0xabe>
 4ce:	64 63 2b             	movsxd ebp,DWORD PTR fs:[rbx]
 4d1:	2b 2e                	sub    ebp,DWORD PTR [rsi]
 4d3:	73 6f                	jae    544 <_init-0xabc>
 4d5:	2e 36 00 5f 5f       	cs add BYTE PTR ss:[rdi+0x5f],bl
 4da:	67 6d                	ins    DWORD PTR es:[edi],dx
 4dc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 4dd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 4de:	5f                   	pop    rdi
 4df:	73 74                	jae    555 <_init-0xaab>
 4e1:	61                   	(bad)  
 4e2:	72 74                	jb     558 <_init-0xaa8>
 4e4:	5f                   	pop    rdi
 4e5:	5f                   	pop    rdi
 4e6:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 4e9:	54                   	push   rsp
 4ea:	4d 5f                	rex.WRB pop r15
 4ec:	64 65 72 65          	fs gs jb 555 <_init-0xaab>
 4f0:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 4f7:	4d 
 4f8:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 4fa:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 4fb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 4fc:	65 54                	gs push rsp
 4fe:	61                   	(bad)  
 4ff:	62                   	(bad)  
 500:	6c                   	ins    BYTE PTR es:[rdi],dx
 501:	65 00 5f 49          	add    BYTE PTR gs:[rdi+0x49],bl
 505:	54                   	push   rsp
 506:	4d 5f                	rex.WRB pop r15
 508:	72 65                	jb     56f <_init-0xa91>
 50a:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 511:	4d 
 512:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 514:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 515:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 516:	65 54                	gs push rsp
 518:	61                   	(bad)  
 519:	62                   	(bad)  
 51a:	6c                   	ins    BYTE PTR es:[rdi],dx
 51b:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
 51f:	4e 53                	rex.WRX push rbx
 521:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 522:	6c                   	ins    BYTE PTR es:[rdi],dx
 523:	73 45                	jae    56a <_init-0xa96>
 525:	69 00 5f 5a 53 74    	imul   eax,DWORD PTR [rax],0x74535a5f
 52b:	34 65                	xor    al,0x65
 52d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 52e:	64 6c                	fs ins BYTE PTR es:[rdi],dx
 530:	49 63 53 74          	movsxd rdx,DWORD PTR [r11+0x74]
 534:	31 31                	xor    DWORD PTR [rcx],esi
 536:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
 539:	72 5f                	jb     59a <_init-0xa66>
 53b:	74 72                	je     5af <_init-0xa51>
 53d:	61                   	(bad)  
 53e:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x52454563
 545:	52 
 546:	53                   	push   rbx
 547:	74 31                	je     57a <_init-0xa86>
 549:	33 62 61             	xor    esp,DWORD PTR [rdx+0x61]
 54c:	73 69                	jae    5b7 <_init-0xa49>
 54e:	63 5f 6f             	movsxd ebx,DWORD PTR [rdi+0x6f]
 551:	73 74                	jae    5c7 <_init-0xa39>
 553:	72 65                	jb     5ba <_init-0xa46>
 555:	61                   	(bad)  
 556:	6d                   	ins    DWORD PTR es:[rdi],dx
 557:	49 54                	rex.WB push r12
 559:	5f                   	pop    rdi
 55a:	54                   	push   rsp
 55b:	30 5f 45             	xor    BYTE PTR [rdi+0x45],bl
 55e:	53                   	push   rbx
 55f:	36 5f                	ss pop rdi
 561:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
 564:	4e 53                	rex.WRX push rbx
 566:	74 38                	je     5a0 <_init-0xa60>
 568:	69 6f 73 5f 62 61 73 	imul   ebp,DWORD PTR [rdi+0x73],0x7361625f
 56f:	65 34 49             	gs xor al,0x49
 572:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 573:	69 74 44 31 45 76 00 	imul   esi,DWORD PTR [rsp+rax*2+0x31],0x5f007645
 57a:	5f 
 57b:	5a                   	pop    rdx
 57c:	53                   	push   rbx
 57d:	74 31                	je     5b0 <_init-0xa50>
 57f:	37                   	(bad)  
 580:	5f                   	pop    rdi
 581:	5f                   	pop    rdi
 582:	74 68                	je     5ec <_init-0xa14>
 584:	72 6f                	jb     5f5 <_init-0xa0b>
 586:	77 5f                	ja     5e7 <_init-0xa19>
 588:	62 61 64 5f 61       	(bad)  {k7}
 58d:	6c                   	ins    BYTE PTR es:[rdi],dx
 58e:	6c                   	ins    BYTE PTR es:[rdi],dx
 58f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 590:	63 76 00             	movsxd esi,DWORD PTR [rsi+0x0]
 593:	5f                   	pop    rdi
 594:	5a                   	pop    rdx
 595:	64 6c                	fs ins BYTE PTR es:[rdi],dx
 597:	50                   	push   rax
 598:	76 00                	jbe    59a <_init-0xa66>
 59a:	5f                   	pop    rdi
 59b:	5a                   	pop    rdx
 59c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 59d:	77 6d                	ja     60c <_init-0x9f4>
 59f:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
 5a2:	4e 53                	rex.WRX push rbx
 5a4:	74 38                	je     5de <_init-0xa22>
 5a6:	69 6f 73 5f 62 61 73 	imul   ebp,DWORD PTR [rdi+0x73],0x7361625f
 5ad:	65 34 49             	gs xor al,0x49
 5b0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 5b1:	69 74 43 31 45 76 00 	imul   esi,DWORD PTR [rbx+rax*2+0x31],0x5f007645
 5b8:	5f 
 5b9:	5a                   	pop    rdx
 5ba:	53                   	push   rbx
 5bb:	74 32                	je     5ef <_init-0xa11>
 5bd:	34 5f                	xor    al,0x5f
 5bf:	5f                   	pop    rdi
 5c0:	74 68                	je     62a <_init-0x9d6>
 5c2:	72 6f                	jb     633 <_init-0x9cd>
 5c4:	77 5f                	ja     625 <_init-0x9db>
 5c6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 5c7:	75 74                	jne    63d <_init-0x9c3>
 5c9:	5f                   	pop    rdi
 5ca:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 5cb:	66 5f                	pop    di
 5cd:	72 61                	jb     630 <_init-0x9d0>
 5cf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 5d0:	67 65 5f             	addr32 gs pop rdi
 5d3:	66 6d                	ins    WORD PTR es:[rdi],dx
 5d5:	74 50                	je     627 <_init-0x9d9>
 5d7:	4b 63 7a 00          	rex.WXB movsxd rdi,DWORD PTR [r10+0x0]
 5db:	5f                   	pop    rdi
 5dc:	5a                   	pop    rdx
 5dd:	53                   	push   rbx
 5de:	74 34                	je     614 <_init-0x9ec>
 5e0:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
 5e3:	74 00                	je     5e5 <_init-0xa1b>
 5e5:	6c                   	ins    BYTE PTR es:[rdi],dx
 5e6:	69 62 63 2e 73 6f 2e 	imul   esp,DWORD PTR [rdx+0x63],0x2e6f732e
 5ed:	36 00 73 74          	add    BYTE PTR ss:[rbx+0x74],dh
 5f1:	72 74                	jb     667 <_init-0x999>
 5f3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 5f4:	6c                   	ins    BYTE PTR es:[rdi],dx
 5f5:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 5f8:	63 78 61             	movsxd edi,DWORD PTR [rax+0x61]
 5fb:	5f                   	pop    rdi
 5fc:	61                   	(bad)  
 5fd:	74 65                	je     664 <_init-0x99c>
 5ff:	78 69                	js     66a <_init-0x996>
 601:	74 00                	je     603 <_init-0x9fd>
 603:	5f                   	pop    rdi
 604:	5f                   	pop    rdi
 605:	63 78 61             	movsxd edi,DWORD PTR [rax+0x61]
 608:	5f                   	pop    rdi
 609:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [rsi+0x61],0x696c
 60f:	7a 65                	jp     676 <_init-0x98a>
 611:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 614:	6c                   	ins    BYTE PTR es:[rdi],dx
 615:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
 61c:	72 74                	jb     692 <_init-0x96e>
 61e:	5f                   	pop    rdi
 61f:	6d                   	ins    DWORD PTR es:[rdi],dx
 620:	61                   	(bad)  
 621:	69 6e 00 47 4c 49 42 	imul   ebp,DWORD PTR [rsi+0x0],0x42494c47
 628:	43 5f                	rex.XB pop r15
 62a:	32 2e                	xor    ch,BYTE PTR [rsi]
 62c:	32 2e                	xor    ch,BYTE PTR [rsi]
 62e:	35 00 47 4c 49       	xor    eax,0x494c4700
 633:	42                   	rex.X
 634:	43 58                	rex.XB pop r8
 636:	58                   	pop    rax
 637:	5f                   	pop    rdi
 638:	33 2e                	xor    ebp,DWORD PTR [rsi]
 63a:	34 2e                	xor    al,0x2e
 63c:	32 30                	xor    dh,BYTE PTR [rax]
 63e:	00 47 4c             	add    BYTE PTR [rdi+0x4c],al
 641:	49                   	rex.WB
 642:	42                   	rex.X
 643:	43 58                	rex.XB pop r8
 645:	58                   	pop    rax
 646:	5f                   	pop    rdi
 647:	33 2e                	xor    ebp,DWORD PTR [rsi]
 649:	34 00                	xor    al,0x0

Disassembly of section .gnu.version:

000000000000064c <.gnu.version>:
 64c:	00 00                	add    BYTE PTR [rax],al
 64e:	02 00                	add    al,BYTE PTR [rax]
 650:	02 00                	add    al,BYTE PTR [rax]
 652:	03 00                	add    eax,DWORD PTR [rax]
 654:	02 00                	add    al,BYTE PTR [rax]
 656:	02 00                	add    al,BYTE PTR [rax]
 658:	03 00                	add    eax,DWORD PTR [rax]
 65a:	04 00                	add    al,0x0
 65c:	02 00                	add    al,BYTE PTR [rax]
 65e:	02 00                	add    al,BYTE PTR [rax]
 660:	00 00                	add    BYTE PTR [rax],al
 662:	03 00                	add    eax,DWORD PTR [rax]
 664:	00 00                	add    BYTE PTR [rax],al
 666:	00 00                	add    BYTE PTR [rax],al
 668:	02 00                	add    al,BYTE PTR [rax]
 66a:	03 00                	add    eax,DWORD PTR [rax]
 66c:	02 00                	add    al,BYTE PTR [rax]

Disassembly of section .gnu.version_r:

0000000000000670 <.gnu.version_r>:
 670:	01 00                	add    DWORD PTR [rax],eax
 672:	01 00                	add    DWORD PTR [rax],eax
 674:	1d 01 00 00 10       	sbb    eax,0x10000001
 679:	00 00                	add    BYTE PTR [rax],al
 67b:	00 20                	add    BYTE PTR [rax],ah
 67d:	00 00                	add    BYTE PTR [rax],al
 67f:	00 75 1a             	add    BYTE PTR [rbp+0x1a],dh
 682:	69 09 00 00 03 00    	imul   ecx,DWORD PTR [rcx],0x30000
 688:	5c                   	pop    rsp
 689:	01 00                	add    DWORD PTR [rax],eax
 68b:	00 00                	add    BYTE PTR [rax],al
 68d:	00 00                	add    BYTE PTR [rax],al
 68f:	00 01                	add    BYTE PTR [rcx],al
 691:	00 02                	add    BYTE PTR [rdx],al
 693:	00 01                	add    BYTE PTR [rcx],al
 695:	00 00                	add    BYTE PTR [rax],al
 697:	00 10                	add    BYTE PTR [rax],dl
 699:	00 00                	add    BYTE PTR [rax],al
 69b:	00 00                	add    BYTE PTR [rax],al
 69d:	00 00                	add    BYTE PTR [rax],al
 69f:	00 70 f8             	add    BYTE PTR [rax-0x8],dh
 6a2:	97                   	xchg   edi,eax
 6a3:	02 00                	add    al,BYTE PTR [rax]
 6a5:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 6a8:	68 01 00 00 10       	push   0x10000001
 6ad:	00 00                	add    BYTE PTR [rax],al
 6af:	00 74 29 92          	add    BYTE PTR [rcx+rbp*1-0x6e],dh
 6b3:	08 00                	or     BYTE PTR [rax],al
 6b5:	00 02                	add    BYTE PTR [rdx],al
 6b7:	00 77 01             	add    BYTE PTR [rdi+0x1],dh
 6ba:	00 00                	add    BYTE PTR [rax],al
 6bc:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

00000000000006c0 <.rela.dyn>:
 6c0:	58                   	pop    rax
 6c1:	3d 00 00 00 00       	cmp    eax,0x0
 6c6:	00 00                	add    BYTE PTR [rax],al
 6c8:	08 00                	or     BYTE PTR [rax],al
 6ca:	00 00                	add    BYTE PTR [rax],al
 6cc:	00 00                	add    BYTE PTR [rax],al
 6ce:	00 00                	add    BYTE PTR [rax],al
 6d0:	f0 12 00             	lock adc al,BYTE PTR [rax]
 6d3:	00 00                	add    BYTE PTR [rax],al
 6d5:	00 00                	add    BYTE PTR [rax],al
 6d7:	00 60 3d             	add    BYTE PTR [rax+0x3d],ah
 6da:	00 00                	add    BYTE PTR [rax],al
 6dc:	00 00                	add    BYTE PTR [rax],al
 6de:	00 00                	add    BYTE PTR [rax],al
 6e0:	08 00                	or     BYTE PTR [rax],al
 6e2:	00 00                	add    BYTE PTR [rax],al
 6e4:	00 00                	add    BYTE PTR [rax],al
 6e6:	00 00                	add    BYTE PTR [rax],al
 6e8:	a0 11 00 00 00 00 00 	movabs al,ds:0x6800000000000011
 6ef:	00 68 
 6f1:	3d 00 00 00 00       	cmp    eax,0x0
 6f6:	00 00                	add    BYTE PTR [rax],al
 6f8:	08 00                	or     BYTE PTR [rax],al
 6fa:	00 00                	add    BYTE PTR [rax],al
 6fc:	00 00                	add    BYTE PTR [rax],al
 6fe:	00 00                	add    BYTE PTR [rax],al
 700:	b0 12                	mov    al,0x12
 702:	00 00                	add    BYTE PTR [rax],al
 704:	00 00                	add    BYTE PTR [rax],al
 706:	00 00                	add    BYTE PTR [rax],al
 708:	08 40 00             	or     BYTE PTR [rax+0x0],al
 70b:	00 00                	add    BYTE PTR [rax],al
 70d:	00 00                	add    BYTE PTR [rax],al
 70f:	00 08                	add    BYTE PTR [rax],cl
 711:	00 00                	add    BYTE PTR [rax],al
 713:	00 00                	add    BYTE PTR [rax],al
 715:	00 00                	add    BYTE PTR [rax],al
 717:	00 08                	add    BYTE PTR [rax],cl
 719:	40 00 00             	add    BYTE PTR [rax],al
 71c:	00 00                	add    BYTE PTR [rax],al
 71e:	00 00                	add    BYTE PTR [rax],al
 720:	d0 3f                	sar    BYTE PTR [rdi],1
 722:	00 00                	add    BYTE PTR [rax],al
 724:	00 00                	add    BYTE PTR [rax],al
 726:	00 00                	add    BYTE PTR [rax],al
 728:	06                   	(bad)  
 729:	00 00                	add    BYTE PTR [rax],al
 72b:	00 0f                	add    BYTE PTR [rdi],cl
	...
 735:	00 00                	add    BYTE PTR [rax],al
 737:	00 d8                	add    al,bl
 739:	3f                   	(bad)  
 73a:	00 00                	add    BYTE PTR [rax],al
 73c:	00 00                	add    BYTE PTR [rax],al
 73e:	00 00                	add    BYTE PTR [rax],al
 740:	06                   	(bad)  
 741:	00 00                	add    BYTE PTR [rax],al
 743:	00 0a                	add    BYTE PTR [rdx],cl
	...
 74d:	00 00                	add    BYTE PTR [rax],al
 74f:	00 e0                	add    al,ah
 751:	3f                   	(bad)  
 752:	00 00                	add    BYTE PTR [rax],al
 754:	00 00                	add    BYTE PTR [rax],al
 756:	00 00                	add    BYTE PTR [rax],al
 758:	06                   	(bad)  
 759:	00 00                	add    BYTE PTR [rax],al
 75b:	00 0b                	add    BYTE PTR [rbx],cl
	...
 765:	00 00                	add    BYTE PTR [rax],al
 767:	00 e8                	add    al,ch
 769:	3f                   	(bad)  
 76a:	00 00                	add    BYTE PTR [rax],al
 76c:	00 00                	add    BYTE PTR [rax],al
 76e:	00 00                	add    BYTE PTR [rax],al
 770:	06                   	(bad)  
 771:	00 00                	add    BYTE PTR [rax],al
 773:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
	...
 77e:	00 00                	add    BYTE PTR [rax],al
 780:	f0 3f                	lock (bad) 
 782:	00 00                	add    BYTE PTR [rax],al
 784:	00 00                	add    BYTE PTR [rax],al
 786:	00 00                	add    BYTE PTR [rax],al
 788:	06                   	(bad)  
 789:	00 00                	add    BYTE PTR [rax],al
 78b:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # 791 <_init-0x86f>
 791:	00 00                	add    BYTE PTR [rax],al
 793:	00 00                	add    BYTE PTR [rax],al
 795:	00 00                	add    BYTE PTR [rax],al
 797:	00 f8                	add    al,bh
 799:	3f                   	(bad)  
 79a:	00 00                	add    BYTE PTR [rax],al
 79c:	00 00                	add    BYTE PTR [rax],al
 79e:	00 00                	add    BYTE PTR [rax],al
 7a0:	06                   	(bad)  
 7a1:	00 00                	add    BYTE PTR [rax],al
 7a3:	00 0e                	add    BYTE PTR [rsi],cl
	...
 7ad:	00 00                	add    BYTE PTR [rax],al
 7af:	00 20                	add    BYTE PTR [rax],ah
 7b1:	40 00 00             	add    BYTE PTR [rax],al
 7b4:	00 00                	add    BYTE PTR [rax],al
 7b6:	00 00                	add    BYTE PTR [rax],al
 7b8:	05 00 00 00 10       	add    eax,0x10000000
	...

Disassembly of section .rela.plt:

00000000000007c8 <.rela.plt>:
 7c8:	88 3f                	mov    BYTE PTR [rdi],bh
 7ca:	00 00                	add    BYTE PTR [rax],al
 7cc:	00 00                	add    BYTE PTR [rax],al
 7ce:	00 00                	add    BYTE PTR [rax],al
 7d0:	07                   	(bad)  
 7d1:	00 00                	add    BYTE PTR [rax],al
 7d3:	00 01                	add    BYTE PTR [rcx],al
	...
 7dd:	00 00                	add    BYTE PTR [rax],al
 7df:	00 90 3f 00 00 00    	add    BYTE PTR [rax+0x3f],dl
 7e5:	00 00                	add    BYTE PTR [rax],al
 7e7:	00 07                	add    BYTE PTR [rdi],al
 7e9:	00 00                	add    BYTE PTR [rax],al
 7eb:	00 02                	add    BYTE PTR [rdx],al
	...
 7f5:	00 00                	add    BYTE PTR [rax],al
 7f7:	00 98 3f 00 00 00    	add    BYTE PTR [rax+0x3f],bl
 7fd:	00 00                	add    BYTE PTR [rax],al
 7ff:	00 07                	add    BYTE PTR [rdi],al
 801:	00 00                	add    BYTE PTR [rax],al
 803:	00 03                	add    BYTE PTR [rbx],al
	...
 80d:	00 00                	add    BYTE PTR [rax],al
 80f:	00 a0 3f 00 00 00    	add    BYTE PTR [rax+0x3f],ah
 815:	00 00                	add    BYTE PTR [rax],al
 817:	00 07                	add    BYTE PTR [rdi],al
 819:	00 00                	add    BYTE PTR [rax],al
 81b:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
 826:	00 00                	add    BYTE PTR [rax],al
 828:	a8 3f                	test   al,0x3f
 82a:	00 00                	add    BYTE PTR [rax],al
 82c:	00 00                	add    BYTE PTR [rax],al
 82e:	00 00                	add    BYTE PTR [rax],al
 830:	07                   	(bad)  
 831:	00 00                	add    BYTE PTR [rax],al
 833:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 839 <_init-0x7c7>
 839:	00 00                	add    BYTE PTR [rax],al
 83b:	00 00                	add    BYTE PTR [rax],al
 83d:	00 00                	add    BYTE PTR [rax],al
 83f:	00 b0 3f 00 00 00    	add    BYTE PTR [rax+0x3f],dh
 845:	00 00                	add    BYTE PTR [rax],al
 847:	00 07                	add    BYTE PTR [rdi],al
 849:	00 00                	add    BYTE PTR [rax],al
 84b:	00 06                	add    BYTE PTR [rsi],al
	...
 855:	00 00                	add    BYTE PTR [rax],al
 857:	00 b8 3f 00 00 00    	add    BYTE PTR [rax+0x3f],bh
 85d:	00 00                	add    BYTE PTR [rax],al
 85f:	00 07                	add    BYTE PTR [rdi],al
 861:	00 00                	add    BYTE PTR [rax],al
 863:	00 07                	add    BYTE PTR [rdi],al
	...
 86d:	00 00                	add    BYTE PTR [rax],al
 86f:	00 c0                	add    al,al
 871:	3f                   	(bad)  
 872:	00 00                	add    BYTE PTR [rax],al
 874:	00 00                	add    BYTE PTR [rax],al
 876:	00 00                	add    BYTE PTR [rax],al
 878:	07                   	(bad)  
 879:	00 00                	add    BYTE PTR [rax],al
 87b:	00 08                	add    BYTE PTR [rax],cl
	...
 885:	00 00                	add    BYTE PTR [rax],al
 887:	00 c8                	add    al,cl
 889:	3f                   	(bad)  
 88a:	00 00                	add    BYTE PTR [rax],al
 88c:	00 00                	add    BYTE PTR [rax],al
 88e:	00 00                	add    BYTE PTR [rax],al
 890:	07                   	(bad)  
 891:	00 00                	add    BYTE PTR [rax],al
 893:	00 09                	add    BYTE PTR [rcx],cl
	...

Disassembly of section .init:

0000000000001000 <_init>:
    1000:	48 83 ec 08          	sub    rsp,0x8
    1004:	48 8b 05 dd 2f 00 00 	mov    rax,QWORD PTR [rip+0x2fdd]        # 3fe8 <__gmon_start__>
    100b:	48 85 c0             	test   rax,rax
    100e:	74 02                	je     1012 <_init+0x12>
    1010:	ff d0                	call   rax
    1012:	48 83 c4 08          	add    rsp,0x8
    1016:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 52 2f 00 00    	push   QWORD PTR [rip+0x2f52]        # 3f78 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 54 2f 00 00    	jmp    QWORD PTR [rip+0x2f54]        # 3f80 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000001030 <_ZSt17__throw_bad_allocv@plt>:
    1030:	ff 25 52 2f 00 00    	jmp    QWORD PTR [rip+0x2f52]        # 3f88 <_ZSt17__throw_bad_allocv@GLIBCXX_3.4>
    1036:	68 00 00 00 00       	push   0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <.plt>

0000000000001040 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@plt>:
    1040:	ff 25 4a 2f 00 00    	jmp    QWORD PTR [rip+0x2f4a]        # 3f90 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    1046:	68 01 00 00 00       	push   0x1
    104b:	e9 d0 ff ff ff       	jmp    1020 <.plt>

0000000000001050 <__cxa_atexit@plt>:
    1050:	ff 25 42 2f 00 00    	jmp    QWORD PTR [rip+0x2f42]        # 3f98 <__cxa_atexit@GLIBC_2.2.5>
    1056:	68 02 00 00 00       	push   0x2
    105b:	e9 c0 ff ff ff       	jmp    1020 <.plt>

0000000000001060 <_ZdlPv@plt>:
    1060:	ff 25 3a 2f 00 00    	jmp    QWORD PTR [rip+0x2f3a]        # 3fa0 <_ZdlPv@GLIBCXX_3.4>
    1066:	68 03 00 00 00       	push   0x3
    106b:	e9 b0 ff ff ff       	jmp    1020 <.plt>

0000000000001070 <_Znwm@plt>:
    1070:	ff 25 32 2f 00 00    	jmp    QWORD PTR [rip+0x2f32]        # 3fa8 <_Znwm@GLIBCXX_3.4>
    1076:	68 04 00 00 00       	push   0x4
    107b:	e9 a0 ff ff ff       	jmp    1020 <.plt>

0000000000001080 <strtol@plt>:
    1080:	ff 25 2a 2f 00 00    	jmp    QWORD PTR [rip+0x2f2a]        # 3fb0 <strtol@GLIBC_2.2.5>
    1086:	68 05 00 00 00       	push   0x5
    108b:	e9 90 ff ff ff       	jmp    1020 <.plt>

0000000000001090 <_ZSt24__throw_out_of_range_fmtPKcz@plt>:
    1090:	ff 25 22 2f 00 00    	jmp    QWORD PTR [rip+0x2f22]        # 3fb8 <_ZSt24__throw_out_of_range_fmtPKcz@GLIBCXX_3.4.20>
    1096:	68 06 00 00 00       	push   0x6
    109b:	e9 80 ff ff ff       	jmp    1020 <.plt>

00000000000010a0 <_ZNSt8ios_base4InitC1Ev@plt>:
    10a0:	ff 25 1a 2f 00 00    	jmp    QWORD PTR [rip+0x2f1a]        # 3fc0 <_ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4>
    10a6:	68 07 00 00 00       	push   0x7
    10ab:	e9 70 ff ff ff       	jmp    1020 <.plt>

00000000000010b0 <_ZNSolsEi@plt>:
    10b0:	ff 25 12 2f 00 00    	jmp    QWORD PTR [rip+0x2f12]        # 3fc8 <_ZNSolsEi@GLIBCXX_3.4>
    10b6:	68 08 00 00 00       	push   0x8
    10bb:	e9 60 ff ff ff       	jmp    1020 <.plt>

Disassembly of section .plt.got:

00000000000010c0 <__cxa_finalize@plt>:
    10c0:	ff 25 0a 2f 00 00    	jmp    QWORD PTR [rip+0x2f0a]        # 3fd0 <__cxa_finalize@GLIBC_2.2.5>
    10c6:	66 90                	xchg   ax,ax

Disassembly of section .text:

00000000000010d0 <main>:
    10d0:	55                   	push   rbp
    10d1:	ba 0a 00 00 00       	mov    edx,0xa
    10d6:	53                   	push   rbx
    10d7:	48 83 ec 08          	sub    rsp,0x8
    10db:	48 8b 7e 08          	mov    rdi,QWORD PTR [rsi+0x8]
    10df:	31 f6                	xor    esi,esi
    10e1:	e8 9a ff ff ff       	call   1080 <strtol@plt>
    10e6:	8d 78 01             	lea    edi,[rax+0x1]
    10e9:	48 89 c5             	mov    rbp,rax
    10ec:	48 63 ff             	movsxd rdi,edi
    10ef:	48 85 ff             	test   rdi,rdi
    10f2:	0f 84 97 00 00 00    	je     118f <main+0xbf>
    10f8:	48 b8 ff ff ff ff ff 	movabs rax,0x3fffffffffffffff
    10ff:	ff ff 3f 
    1102:	48 39 c7             	cmp    rdi,rax
    1105:	0f 87 8a 00 00 00    	ja     1195 <main+0xc5>
    110b:	48 8d 1c bd 00 00 00 	lea    rbx,[rdi*4+0x0]
    1112:	00 
    1113:	48 89 df             	mov    rdi,rbx
    1116:	e8 55 ff ff ff       	call   1070 <_Znwm@plt>
    111b:	48 63 fd             	movsxd rdi,ebp
    111e:	31 c9                	xor    ecx,ecx
    1120:	48 8d 14 18          	lea    rdx,[rax+rbx*1]
    1124:	eb 0d                	jmp    1133 <main+0x63>
    1126:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    112d:	00 00 00 
    1130:	48 89 f1             	mov    rcx,rsi
    1133:	c7 04 88 00 00 00 00 	mov    DWORD PTR [rax+rcx*4],0x0
    113a:	48 8d 71 01          	lea    rsi,[rcx+0x1]
    113e:	48 39 cf             	cmp    rdi,rcx
    1141:	75 ed                	jne    1130 <main+0x60>
    1143:	48 8b 3d f6 2f 00 00 	mov    rdi,QWORD PTR [rip+0x2ff6]        # 4140 <memo>
    114a:	48 89 15 f7 2f 00 00 	mov    QWORD PTR [rip+0x2ff7],rdx        # 4148 <memo+0x8>
    1151:	48 89 05 e8 2f 00 00 	mov    QWORD PTR [rip+0x2fe8],rax        # 4140 <memo>
    1158:	48 89 15 f1 2f 00 00 	mov    QWORD PTR [rip+0x2ff1],rdx        # 4150 <memo+0x10>
    115f:	48 85 ff             	test   rdi,rdi
    1162:	74 05                	je     1169 <main+0x99>
    1164:	e8 f7 fe ff ff       	call   1060 <_ZdlPv@plt>
    1169:	89 ef                	mov    edi,ebp
    116b:	e8 90 01 00 00       	call   1300 <_Z4fiboi>
    1170:	48 8d 3d a9 2e 00 00 	lea    rdi,[rip+0x2ea9]        # 4020 <_ZSt4cout@@GLIBCXX_3.4>
    1177:	89 c6                	mov    esi,eax
    1179:	e8 32 ff ff ff       	call   10b0 <_ZNSolsEi@plt>
    117e:	48 89 c7             	mov    rdi,rax
    1181:	e8 ba fe ff ff       	call   1040 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@plt>
    1186:	48 83 c4 08          	add    rsp,0x8
    118a:	31 c0                	xor    eax,eax
    118c:	5b                   	pop    rbx
    118d:	5d                   	pop    rbp
    118e:	c3                   	ret    
    118f:	31 c0                	xor    eax,eax
    1191:	31 d2                	xor    edx,edx
    1193:	eb ae                	jmp    1143 <main+0x73>
    1195:	e8 96 fe ff ff       	call   1030 <_ZSt17__throw_bad_allocv@plt>
    119a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000011a0 <_GLOBAL__sub_I_memo>:
    11a0:	48 83 ec 08          	sub    rsp,0x8
    11a4:	48 8d 3d ad 2f 00 00 	lea    rdi,[rip+0x2fad]        # 4158 <_ZStL8__ioinit>
    11ab:	e8 f0 fe ff ff       	call   10a0 <_ZNSt8ios_base4InitC1Ev@plt>
    11b0:	48 8b 3d 41 2e 00 00 	mov    rdi,QWORD PTR [rip+0x2e41]        # 3ff8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    11b7:	48 8d 15 4a 2e 00 00 	lea    rdx,[rip+0x2e4a]        # 4008 <__dso_handle>
    11be:	48 8d 35 93 2f 00 00 	lea    rsi,[rip+0x2f93]        # 4158 <_ZStL8__ioinit>
    11c5:	e8 86 fe ff ff       	call   1050 <__cxa_atexit@plt>
    11ca:	48 8d 15 37 2e 00 00 	lea    rdx,[rip+0x2e37]        # 4008 <__dso_handle>
    11d1:	48 c7 05 64 2f 00 00 	mov    QWORD PTR [rip+0x2f64],0x0        # 4140 <memo>
    11d8:	00 00 00 00 
    11dc:	48 8d 35 5d 2f 00 00 	lea    rsi,[rip+0x2f5d]        # 4140 <memo>
    11e3:	48 c7 05 5a 2f 00 00 	mov    QWORD PTR [rip+0x2f5a],0x0        # 4148 <memo+0x8>
    11ea:	00 00 00 00 
    11ee:	48 8d 3d bb 01 00 00 	lea    rdi,[rip+0x1bb]        # 13b0 <_ZNSt6vectorIiSaIiEED1Ev>
    11f5:	48 c7 05 50 2f 00 00 	mov    QWORD PTR [rip+0x2f50],0x0        # 4150 <memo+0x10>
    11fc:	00 00 00 00 
    1200:	48 83 c4 08          	add    rsp,0x8
    1204:	e9 47 fe ff ff       	jmp    1050 <__cxa_atexit@plt>
    1209:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001210 <_start>:
    1210:	31 ed                	xor    ebp,ebp
    1212:	49 89 d1             	mov    r9,rdx
    1215:	5e                   	pop    rsi
    1216:	48 89 e2             	mov    rdx,rsp
    1219:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
    121d:	50                   	push   rax
    121e:	54                   	push   rsp
    121f:	4c 8d 05 0a 02 00 00 	lea    r8,[rip+0x20a]        # 1430 <__libc_csu_fini>
    1226:	48 8d 0d a3 01 00 00 	lea    rcx,[rip+0x1a3]        # 13d0 <__libc_csu_init>
    122d:	48 8d 3d 9c fe ff ff 	lea    rdi,[rip+0xfffffffffffffe9c]        # 10d0 <main>
    1234:	ff 15 a6 2d 00 00    	call   QWORD PTR [rip+0x2da6]        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    123a:	f4                   	hlt    
    123b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001240 <deregister_tm_clones>:
    1240:	48 8d 3d c9 2d 00 00 	lea    rdi,[rip+0x2dc9]        # 4010 <__TMC_END__>
    1247:	48 8d 05 c2 2d 00 00 	lea    rax,[rip+0x2dc2]        # 4010 <__TMC_END__>
    124e:	48 39 f8             	cmp    rax,rdi
    1251:	74 15                	je     1268 <deregister_tm_clones+0x28>
    1253:	48 8b 05 7e 2d 00 00 	mov    rax,QWORD PTR [rip+0x2d7e]        # 3fd8 <_ITM_deregisterTMCloneTable>
    125a:	48 85 c0             	test   rax,rax
    125d:	74 09                	je     1268 <deregister_tm_clones+0x28>
    125f:	ff e0                	jmp    rax
    1261:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    1268:	c3                   	ret    
    1269:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001270 <register_tm_clones>:
    1270:	48 8d 3d 99 2d 00 00 	lea    rdi,[rip+0x2d99]        # 4010 <__TMC_END__>
    1277:	48 8d 35 92 2d 00 00 	lea    rsi,[rip+0x2d92]        # 4010 <__TMC_END__>
    127e:	48 29 fe             	sub    rsi,rdi
    1281:	48 c1 fe 03          	sar    rsi,0x3
    1285:	48 89 f0             	mov    rax,rsi
    1288:	48 c1 e8 3f          	shr    rax,0x3f
    128c:	48 01 c6             	add    rsi,rax
    128f:	48 d1 fe             	sar    rsi,1
    1292:	74 14                	je     12a8 <register_tm_clones+0x38>
    1294:	48 8b 05 55 2d 00 00 	mov    rax,QWORD PTR [rip+0x2d55]        # 3ff0 <_ITM_registerTMCloneTable>
    129b:	48 85 c0             	test   rax,rax
    129e:	74 08                	je     12a8 <register_tm_clones+0x38>
    12a0:	ff e0                	jmp    rax
    12a2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    12a8:	c3                   	ret    
    12a9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000012b0 <__do_global_dtors_aux>:
    12b0:	80 3d 79 2e 00 00 00 	cmp    BYTE PTR [rip+0x2e79],0x0        # 4130 <completed.7963>
    12b7:	75 2f                	jne    12e8 <__do_global_dtors_aux+0x38>
    12b9:	55                   	push   rbp
    12ba:	48 83 3d 0e 2d 00 00 	cmp    QWORD PTR [rip+0x2d0e],0x0        # 3fd0 <__cxa_finalize@GLIBC_2.2.5>
    12c1:	00 
    12c2:	48 89 e5             	mov    rbp,rsp
    12c5:	74 0c                	je     12d3 <__do_global_dtors_aux+0x23>
    12c7:	48 8b 3d 3a 2d 00 00 	mov    rdi,QWORD PTR [rip+0x2d3a]        # 4008 <__dso_handle>
    12ce:	e8 ed fd ff ff       	call   10c0 <__cxa_finalize@plt>
    12d3:	e8 68 ff ff ff       	call   1240 <deregister_tm_clones>
    12d8:	c6 05 51 2e 00 00 01 	mov    BYTE PTR [rip+0x2e51],0x1        # 4130 <completed.7963>
    12df:	5d                   	pop    rbp
    12e0:	c3                   	ret    
    12e1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    12e8:	c3                   	ret    
    12e9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000012f0 <frame_dummy>:
    12f0:	e9 7b ff ff ff       	jmp    1270 <register_tm_clones>
    12f5:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    12fc:	00 00 00 
    12ff:	90                   	nop

0000000000001300 <_Z4fiboi>:
    1300:	48 8b 05 39 2e 00 00 	mov    rax,QWORD PTR [rip+0x2e39]        # 4140 <memo>
    1307:	48 8b 15 3a 2e 00 00 	mov    rdx,QWORD PTR [rip+0x2e3a]        # 4148 <memo+0x8>
    130e:	41 54                	push   r12
    1310:	55                   	push   rbp
    1311:	48 63 ef             	movsxd rbp,edi
    1314:	48 29 c2             	sub    rdx,rax
    1317:	53                   	push   rbx
    1318:	48 c1 fa 02          	sar    rdx,0x2
    131c:	48 39 d5             	cmp    rbp,rdx
    131f:	73 79                	jae    139a <_Z4fiboi+0x9a>
    1321:	8b 04 a8             	mov    eax,DWORD PTR [rax+rbp*4]
    1324:	85 c0                	test   eax,eax
    1326:	75 5c                	jne    1384 <_Z4fiboi+0x84>
    1328:	85 ed                	test   ebp,ebp
    132a:	74 58                	je     1384 <_Z4fiboi+0x84>
    132c:	83 fd 01             	cmp    ebp,0x1
    132f:	74 5f                	je     1390 <_Z4fiboi+0x90>
    1331:	8d 7d ff             	lea    edi,[rbp-0x1]
    1334:	e8 c7 ff ff ff       	call   1300 <_Z4fiboi>
    1339:	8d 7d fe             	lea    edi,[rbp-0x2]
    133c:	41 89 c4             	mov    r12d,eax
    133f:	e8 bc ff ff ff       	call   1300 <_Z4fiboi>
    1344:	48 8b 35 f5 2d 00 00 	mov    rsi,QWORD PTR [rip+0x2df5]        # 4140 <memo>
    134b:	48 8b 15 f6 2d 00 00 	mov    rdx,QWORD PTR [rip+0x2df6]        # 4148 <memo+0x8>
    1352:	41 8d 0c 04          	lea    ecx,[r12+rax*1]
    1356:	48 29 f2             	sub    rdx,rsi
    1359:	48 c1 fa 02          	sar    rdx,0x2
    135d:	48 39 d5             	cmp    rbp,rdx
    1360:	73 38                	jae    139a <_Z4fiboi+0x9a>
    1362:	89 c8                	mov    eax,ecx
    1364:	ba 99 2f b8 44       	mov    edx,0x44b82f99
    1369:	f7 ea                	imul   edx
    136b:	89 d0                	mov    eax,edx
    136d:	89 ca                	mov    edx,ecx
    136f:	c1 f8 1c             	sar    eax,0x1c
    1372:	c1 fa 1f             	sar    edx,0x1f
    1375:	29 d0                	sub    eax,edx
    1377:	69 c0 07 ca 9a 3b    	imul   eax,eax,0x3b9aca07
    137d:	29 c1                	sub    ecx,eax
    137f:	89 0c ae             	mov    DWORD PTR [rsi+rbp*4],ecx
    1382:	89 c8                	mov    eax,ecx
    1384:	5b                   	pop    rbx
    1385:	5d                   	pop    rbp
    1386:	41 5c                	pop    r12
    1388:	c3                   	ret    
    1389:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    1390:	5b                   	pop    rbx
    1391:	b8 01 00 00 00       	mov    eax,0x1
    1396:	5d                   	pop    rbp
    1397:	41 5c                	pop    r12
    1399:	c3                   	ret    
    139a:	48 89 ee             	mov    rsi,rbp
    139d:	48 8d 3d 64 0c 00 00 	lea    rdi,[rip+0xc64]        # 2008 <_IO_stdin_used+0x8>
    13a4:	31 c0                	xor    eax,eax
    13a6:	e8 e5 fc ff ff       	call   1090 <_ZSt24__throw_out_of_range_fmtPKcz@plt>
    13ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000013b0 <_ZNSt6vectorIiSaIiEED1Ev>:
    13b0:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
    13b3:	48 85 ff             	test   rdi,rdi
    13b6:	74 08                	je     13c0 <_ZNSt6vectorIiSaIiEED1Ev+0x10>
    13b8:	e9 a3 fc ff ff       	jmp    1060 <_ZdlPv@plt>
    13bd:	0f 1f 00             	nop    DWORD PTR [rax]
    13c0:	c3                   	ret    
    13c1:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    13c8:	00 00 00 
    13cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000013d0 <__libc_csu_init>:
    13d0:	41 57                	push   r15
    13d2:	49 89 d7             	mov    r15,rdx
    13d5:	41 56                	push   r14
    13d7:	49 89 f6             	mov    r14,rsi
    13da:	41 55                	push   r13
    13dc:	41 89 fd             	mov    r13d,edi
    13df:	41 54                	push   r12
    13e1:	4c 8d 25 70 29 00 00 	lea    r12,[rip+0x2970]        # 3d58 <__frame_dummy_init_array_entry>
    13e8:	55                   	push   rbp
    13e9:	48 8d 2d 78 29 00 00 	lea    rbp,[rip+0x2978]        # 3d68 <__init_array_end>
    13f0:	53                   	push   rbx
    13f1:	4c 29 e5             	sub    rbp,r12
    13f4:	48 83 ec 08          	sub    rsp,0x8
    13f8:	e8 03 fc ff ff       	call   1000 <_init>
    13fd:	48 c1 fd 03          	sar    rbp,0x3
    1401:	74 1b                	je     141e <__libc_csu_init+0x4e>
    1403:	31 db                	xor    ebx,ebx
    1405:	0f 1f 00             	nop    DWORD PTR [rax]
    1408:	4c 89 fa             	mov    rdx,r15
    140b:	4c 89 f6             	mov    rsi,r14
    140e:	44 89 ef             	mov    edi,r13d
    1411:	41 ff 14 dc          	call   QWORD PTR [r12+rbx*8]
    1415:	48 83 c3 01          	add    rbx,0x1
    1419:	48 39 dd             	cmp    rbp,rbx
    141c:	75 ea                	jne    1408 <__libc_csu_init+0x38>
    141e:	48 83 c4 08          	add    rsp,0x8
    1422:	5b                   	pop    rbx
    1423:	5d                   	pop    rbp
    1424:	41 5c                	pop    r12
    1426:	41 5d                	pop    r13
    1428:	41 5e                	pop    r14
    142a:	41 5f                	pop    r15
    142c:	c3                   	ret    
    142d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000001430 <__libc_csu_fini>:
    1430:	c3                   	ret    

Disassembly of section .fini:

0000000000001434 <_fini>:
    1434:	48 83 ec 08          	sub    rsp,0x8
    1438:	48 83 c4 08          	add    rsp,0x8
    143c:	c3                   	ret    

Disassembly of section .rodata:

0000000000002000 <_IO_stdin_used>:
    2000:	01 00                	add    DWORD PTR [rax],eax
    2002:	02 00                	add    al,BYTE PTR [rax]
    2004:	00 00                	add    BYTE PTR [rax],al
    2006:	00 00                	add    BYTE PTR [rax],al
    2008:	76 65                	jbe    206f <__GNU_EH_FRAME_HDR+0x17>
    200a:	63 74 6f 72          	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
    200e:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    2010:	5f                   	pop    rdi
    2011:	4d 5f                	rex.WRB pop r15
    2013:	72 61                	jb     2076 <__GNU_EH_FRAME_HDR+0x1e>
    2015:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2016:	67 65 5f             	addr32 gs pop rdi
    2019:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    201c:	63 6b 3a             	movsxd ebp,DWORD PTR [rbx+0x3a]
    201f:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    2022:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2023:	20 28                	and    BYTE PTR [rax],ch
    2025:	77 68                	ja     208f <__GNU_EH_FRAME_HDR+0x37>
    2027:	69 63 68 20 69 73 20 	imul   esp,DWORD PTR [rbx+0x68],0x20736920
    202e:	25 7a 75 29 20       	and    eax,0x2029757a
    2033:	3e 3d 20 74 68 69    	ds cmp eax,0x69687420
    2039:	73 2d                	jae    2068 <__GNU_EH_FRAME_HDR+0x10>
    203b:	3e 73 69             	ds jae 20a7 <__GNU_EH_FRAME_HDR+0x4f>
    203e:	7a 65                	jp     20a5 <__GNU_EH_FRAME_HDR+0x4d>
    2040:	28 29                	sub    BYTE PTR [rcx],ch
    2042:	20 28                	and    BYTE PTR [rax],ch
    2044:	77 68                	ja     20ae <__GNU_EH_FRAME_HDR+0x56>
    2046:	69 63 68 20 69 73 20 	imul   esp,DWORD PTR [rbx+0x68],0x20736920
    204d:	25 7a 75 29 00       	and    eax,0x29757a
    2052:	00 00                	add    BYTE PTR [rax],al
    2054:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .eh_frame_hdr:

0000000000002058 <__GNU_EH_FRAME_HDR>:
    2058:	01 1b                	add    DWORD PTR [rbx],ebx
    205a:	03 3b                	add    edi,DWORD PTR [rbx]
    205c:	54                   	push   rsp
    205d:	00 00                	add    BYTE PTR [rax],al
    205f:	00 09                	add    BYTE PTR [rcx],cl
    2061:	00 00                	add    BYTE PTR [rax],al
    2063:	00 c8                	add    al,cl
    2065:	ef                   	out    dx,eax
    2066:	ff                   	(bad)  
    2067:	ff a0 00 00 00 68    	jmp    QWORD PTR [rax+0x68000000]
    206d:	f0 ff                	lock (bad) 
    206f:	ff c8                	dec    eax
    2071:	00 00                	add    BYTE PTR [rax],al
    2073:	00 78 f0             	add    BYTE PTR [rax-0x10],bh
    2076:	ff                   	(bad)  
    2077:	ff 30                	push   QWORD PTR [rax]
    2079:	01 00                	add    DWORD PTR [rax],eax
    207b:	00 48 f1             	add    BYTE PTR [rax-0xf],cl
    207e:	ff                   	(bad)  
    207f:	ff 5c 01 00          	call   FWORD PTR [rcx+rax*1+0x0]
    2083:	00 b8 f1 ff ff 70    	add    BYTE PTR [rax+0x70fffff1],bh
    2089:	00 00                	add    BYTE PTR [rax],al
    208b:	00 a8 f2 ff ff f4    	add    BYTE PTR [rax-0xb00000e],ch
    2091:	00 00                	add    BYTE PTR [rax],al
    2093:	00 58 f3             	add    BYTE PTR [rax-0xd],bl
    2096:	ff                   	(bad)  
    2097:	ff e0                	jmp    rax
    2099:	00 00                	add    BYTE PTR [rax],al
    209b:	00 78 f3             	add    BYTE PTR [rax-0xd],bh
    209e:	ff                   	(bad)  
    209f:	ff                   	(bad)  
    20a0:	78 01                	js     20a3 <__GNU_EH_FRAME_HDR+0x4b>
    20a2:	00 00                	add    BYTE PTR [rax],al
    20a4:	d8 f3                	fdiv   st,st(3)
    20a6:	ff                   	(bad)  
    20a7:	ff c0                	inc    eax
    20a9:	01 00                	add    DWORD PTR [rax],eax
	...

Disassembly of section .eh_frame:

00000000000020b0 <__FRAME_END__-0x17c>:
    20b0:	14 00                	adc    al,0x0
    20b2:	00 00                	add    BYTE PTR [rax],al
    20b4:	00 00                	add    BYTE PTR [rax],al
    20b6:	00 00                	add    BYTE PTR [rax],al
    20b8:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
    20bb:	00 01                	add    BYTE PTR [rcx],al
    20bd:	78 10                	js     20cf <__GNU_EH_FRAME_HDR+0x77>
    20bf:	01 1b                	add    DWORD PTR [rbx],ebx
    20c1:	0c 07                	or     al,0x7
    20c3:	08 90 01 07 10 14    	or     BYTE PTR [rax+0x14100701],dl
    20c9:	00 00                	add    BYTE PTR [rax],al
    20cb:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    20ce:	00 00                	add    BYTE PTR [rax],al
    20d0:	40 f1                	rex icebp 
    20d2:	ff                   	(bad)  
    20d3:	ff 2b                	jmp    FWORD PTR [rbx]
	...
    20dd:	00 00                	add    BYTE PTR [rax],al
    20df:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
    20e2:	00 00                	add    BYTE PTR [rax],al
    20e4:	00 00                	add    BYTE PTR [rax],al
    20e6:	00 00                	add    BYTE PTR [rax],al
    20e8:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
    20eb:	00 01                	add    BYTE PTR [rcx],al
    20ed:	78 10                	js     20ff <__GNU_EH_FRAME_HDR+0xa7>
    20ef:	01 1b                	add    DWORD PTR [rbx],ebx
    20f1:	0c 07                	or     al,0x7
    20f3:	08 90 01 00 00 24    	or     BYTE PTR [rax+0x24000001],dl
    20f9:	00 00                	add    BYTE PTR [rax],al
    20fb:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    20fe:	00 00                	add    BYTE PTR [rax],al
    2100:	20 ef                	and    bh,ch
    2102:	ff                   	(bad)  
    2103:	ff a0 00 00 00 00    	jmp    QWORD PTR [rax+0x0]
    2109:	0e                   	(bad)  
    210a:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
    210d:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
    2110:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
    2113:	80 00 3f             	add    BYTE PTR [rax],0x3f
    2116:	1a 3b                	sbb    bh,BYTE PTR [rbx]
    2118:	2a 33                	sub    dh,BYTE PTR [rbx]
    211a:	24 22                	and    al,0x22
    211c:	00 00                	add    BYTE PTR [rax],al
    211e:	00 00                	add    BYTE PTR [rax],al
    2120:	14 00                	adc    al,0x0
    2122:	00 00                	add    BYTE PTR [rax],al
    2124:	44 00 00             	add    BYTE PTR [rax],r8b
    2127:	00 98 ef ff ff 08    	add    BYTE PTR [rax+0x8ffffef],bl
	...
    2135:	00 00                	add    BYTE PTR [rax],al
    2137:	00 10                	add    BYTE PTR [rax],dl
    2139:	00 00                	add    BYTE PTR [rax],al
    213b:	00 5c 00 00          	add    BYTE PTR [rax+rax*1+0x0],bl
    213f:	00 70 f2             	add    BYTE PTR [rax-0xe],dh
    2142:	ff                   	(bad)  
    2143:	ff 11                	call   QWORD PTR [rcx]
    2145:	00 00                	add    BYTE PTR [rax],al
    2147:	00 00                	add    BYTE PTR [rax],al
    2149:	00 00                	add    BYTE PTR [rax],al
    214b:	00 38                	add    BYTE PTR [rax],bh
    214d:	00 00                	add    BYTE PTR [rax],al
    214f:	00 70 00             	add    BYTE PTR [rax+0x0],dh
    2152:	00 00                	add    BYTE PTR [rax],al
    2154:	ac                   	lods   al,BYTE PTR ds:[rsi]
    2155:	f1                   	icebp  
    2156:	ff                   	(bad)  
    2157:	ff ab 00 00 00 00    	jmp    FWORD PTR [rbx+0x0]
    215d:	50                   	push   rax
    215e:	0e                   	(bad)  
    215f:	10 8c 02 41 0e 18 86 	adc    BYTE PTR [rdx+rax*1-0x79e7f1bf],cl
    2166:	03 47 0e             	add    eax,DWORD PTR [rdi+0xe]
    2169:	20 83 04 02 6d 0a    	and    BYTE PTR [rbx+0xa6d0204],al
    216f:	0e                   	(bad)  
    2170:	18 41 0e             	sbb    BYTE PTR [rcx+0xe],al
    2173:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    2176:	08 48 0b             	or     BYTE PTR [rax+0xb],cl
    2179:	41 0a 0e             	or     cl,BYTE PTR [r14]
    217c:	18 46 0e             	sbb    BYTE PTR [rsi+0xe],al
    217f:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    2182:	08 41 0b             	or     BYTE PTR [rcx+0xb],al
    2185:	00 00                	add    BYTE PTR [rax],al
    2187:	00 28                	add    BYTE PTR [rax],ch
    2189:	00 00                	add    BYTE PTR [rax],al
    218b:	00 ac 00 00 00 40 ef 	add    BYTE PTR [rax+rax*1-0x10c00000],ch
    2192:	ff                   	(bad)  
    2193:	ff ca                	dec    edx
    2195:	00 00                	add    BYTE PTR [rax],al
    2197:	00 00                	add    BYTE PTR [rax],al
    2199:	41 0e                	rex.B (bad) 
    219b:	10 86 02 46 0e 18    	adc    BYTE PTR [rsi+0x180e4602],al
    21a1:	83 03 44             	add    DWORD PTR [rbx],0x44
    21a4:	0e                   	(bad)  
    21a5:	20 02                	and    BYTE PTR [rdx],al
    21a7:	af                   	scas   eax,DWORD PTR es:[rdi]
    21a8:	0a 0e                	or     cl,BYTE PTR [rsi]
    21aa:	18 43 0e             	sbb    BYTE PTR [rbx+0xe],al
    21ad:	10 41 0e             	adc    BYTE PTR [rcx+0xe],al
    21b0:	08 41 0b             	or     BYTE PTR [rcx+0xb],al
    21b3:	00 18                	add    BYTE PTR [rax],bl
    21b5:	00 00                	add    BYTE PTR [rax],al
    21b7:	00 d8                	add    al,bl
    21b9:	00 00                	add    BYTE PTR [rax],al
    21bb:	00 e4                	add    ah,ah
    21bd:	ef                   	out    dx,eax
    21be:	ff                   	(bad)  
    21bf:	ff 69 00             	jmp    FWORD PTR [rcx+0x0]
    21c2:	00 00                	add    BYTE PTR [rax],al
    21c4:	00 44 0e 10          	add    BYTE PTR [rsi+rcx*1+0x10],al
    21c8:	02 60 0e             	add    ah,BYTE PTR [rax+0xe]
    21cb:	08 00                	or     BYTE PTR [rax],al
    21cd:	00 00                	add    BYTE PTR [rax],al
    21cf:	00 44 00 00          	add    BYTE PTR [rax+rax*1+0x0],al
    21d3:	00 f4                	add    ah,dh
    21d5:	00 00                	add    BYTE PTR [rax],al
    21d7:	00 f8                	add    al,bh
    21d9:	f1                   	icebp  
    21da:	ff                   	(bad)  
    21db:	ff 5d 00             	call   FWORD PTR [rbp+0x0]
    21de:	00 00                	add    BYTE PTR [rax],al
    21e0:	00 42 0e             	add    BYTE PTR [rdx+0xe],al
    21e3:	10 8f 02 45 0e 18    	adc    BYTE PTR [rdi+0x180e4502],cl
    21e9:	8e 03                	mov    es,WORD PTR [rbx]
    21eb:	45 0e                	rex.RB (bad) 
    21ed:	20 8d 04 45 0e 28    	and    BYTE PTR [rbp+0x280e4504],cl
    21f3:	8c 05 48 0e 30 86    	mov    WORD PTR [rip+0xffffffff86300e48],es        # ffffffff86303041 <_end+0xffffffff862feee1>
    21f9:	06                   	(bad)  
    21fa:	48 0e                	rex.W (bad) 
    21fc:	38 83 07 47 0e 40    	cmp    BYTE PTR [rbx+0x400e4707],al
    2202:	6a 0e                	push   0xe
    2204:	38 41 0e             	cmp    BYTE PTR [rcx+0xe],al
    2207:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
    220a:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
    220d:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
    2210:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
    2213:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    2216:	08 00                	or     BYTE PTR [rax],al
    2218:	10 00                	adc    BYTE PTR [rax],al
    221a:	00 00                	add    BYTE PTR [rax],al
    221c:	3c 01                	cmp    al,0x1
    221e:	00 00                	add    BYTE PTR [rax],al
    2220:	10 f2                	adc    dl,dh
    2222:	ff                   	(bad)  
    2223:	ff 01                	inc    DWORD PTR [rcx]
    2225:	00 00                	add    BYTE PTR [rax],al
    2227:	00 00                	add    BYTE PTR [rax],al
    2229:	00 00                	add    BYTE PTR [rax],al
	...

000000000000222c <__FRAME_END__>:
    222c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .init_array:

0000000000003d58 <__frame_dummy_init_array_entry>:
    3d58:	f0 12 00             	lock adc al,BYTE PTR [rax]
    3d5b:	00 00                	add    BYTE PTR [rax],al
    3d5d:	00 00                	add    BYTE PTR [rax],al
    3d5f:	00 a0 11 00 00 00    	add    BYTE PTR [rax+0x11],ah
    3d65:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000003d68 <__do_global_dtors_aux_fini_array_entry>:
    3d68:	b0 12                	mov    al,0x12
    3d6a:	00 00                	add    BYTE PTR [rax],al
    3d6c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynamic:

0000000000003d70 <_DYNAMIC>:
    3d70:	01 00                	add    DWORD PTR [rax],eax
    3d72:	00 00                	add    BYTE PTR [rax],al
    3d74:	00 00                	add    BYTE PTR [rax],al
    3d76:	00 00                	add    BYTE PTR [rax],al
    3d78:	01 00                	add    DWORD PTR [rax],eax
    3d7a:	00 00                	add    BYTE PTR [rax],al
    3d7c:	00 00                	add    BYTE PTR [rax],al
    3d7e:	00 00                	add    BYTE PTR [rax],al
    3d80:	01 00                	add    DWORD PTR [rax],eax
    3d82:	00 00                	add    BYTE PTR [rax],al
    3d84:	00 00                	add    BYTE PTR [rax],al
    3d86:	00 00                	add    BYTE PTR [rax],al
    3d88:	1d 01 00 00 00       	sbb    eax,0x1
    3d8d:	00 00                	add    BYTE PTR [rax],al
    3d8f:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    3d92:	00 00                	add    BYTE PTR [rax],al
    3d94:	00 00                	add    BYTE PTR [rax],al
    3d96:	00 00                	add    BYTE PTR [rax],al
    3d98:	00 10                	add    BYTE PTR [rax],dl
    3d9a:	00 00                	add    BYTE PTR [rax],al
    3d9c:	00 00                	add    BYTE PTR [rax],al
    3d9e:	00 00                	add    BYTE PTR [rax],al
    3da0:	0d 00 00 00 00       	or     eax,0x0
    3da5:	00 00                	add    BYTE PTR [rax],al
    3da7:	00 34 14             	add    BYTE PTR [rsp+rdx*1],dh
    3daa:	00 00                	add    BYTE PTR [rax],al
    3dac:	00 00                	add    BYTE PTR [rax],al
    3dae:	00 00                	add    BYTE PTR [rax],al
    3db0:	19 00                	sbb    DWORD PTR [rax],eax
    3db2:	00 00                	add    BYTE PTR [rax],al
    3db4:	00 00                	add    BYTE PTR [rax],al
    3db6:	00 00                	add    BYTE PTR [rax],al
    3db8:	58                   	pop    rax
    3db9:	3d 00 00 00 00       	cmp    eax,0x0
    3dbe:	00 00                	add    BYTE PTR [rax],al
    3dc0:	1b 00                	sbb    eax,DWORD PTR [rax]
    3dc2:	00 00                	add    BYTE PTR [rax],al
    3dc4:	00 00                	add    BYTE PTR [rax],al
    3dc6:	00 00                	add    BYTE PTR [rax],al
    3dc8:	10 00                	adc    BYTE PTR [rax],al
    3dca:	00 00                	add    BYTE PTR [rax],al
    3dcc:	00 00                	add    BYTE PTR [rax],al
    3dce:	00 00                	add    BYTE PTR [rax],al
    3dd0:	1a 00                	sbb    al,BYTE PTR [rax]
    3dd2:	00 00                	add    BYTE PTR [rax],al
    3dd4:	00 00                	add    BYTE PTR [rax],al
    3dd6:	00 00                	add    BYTE PTR [rax],al
    3dd8:	68 3d 00 00 00       	push   0x3d
    3ddd:	00 00                	add    BYTE PTR [rax],al
    3ddf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    3de2:	00 00                	add    BYTE PTR [rax],al
    3de4:	00 00                	add    BYTE PTR [rax],al
    3de6:	00 00                	add    BYTE PTR [rax],al
    3de8:	08 00                	or     BYTE PTR [rax],al
    3dea:	00 00                	add    BYTE PTR [rax],al
    3dec:	00 00                	add    BYTE PTR [rax],al
    3dee:	00 00                	add    BYTE PTR [rax],al
    3df0:	f5                   	cmc    
    3df1:	fe                   	(bad)  
    3df2:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3df5:	00 00                	add    BYTE PTR [rax],al
    3df7:	00 08                	add    BYTE PTR [rax],cl
    3df9:	03 00                	add    eax,DWORD PTR [rax]
    3dfb:	00 00                	add    BYTE PTR [rax],al
    3dfd:	00 00                	add    BYTE PTR [rax],al
    3dff:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 3e05 <_DYNAMIC+0x95>
    3e05:	00 00                	add    BYTE PTR [rax],al
    3e07:	00 c8                	add    al,cl
    3e09:	04 00                	add    al,0x0
    3e0b:	00 00                	add    BYTE PTR [rax],al
    3e0d:	00 00                	add    BYTE PTR [rax],al
    3e0f:	00 06                	add    BYTE PTR [rsi],al
    3e11:	00 00                	add    BYTE PTR [rax],al
    3e13:	00 00                	add    BYTE PTR [rax],al
    3e15:	00 00                	add    BYTE PTR [rax],al
    3e17:	00 30                	add    BYTE PTR [rax],dh
    3e19:	03 00                	add    eax,DWORD PTR [rax]
    3e1b:	00 00                	add    BYTE PTR [rax],al
    3e1d:	00 00                	add    BYTE PTR [rax],al
    3e1f:	00 0a                	add    BYTE PTR [rdx],cl
    3e21:	00 00                	add    BYTE PTR [rax],al
    3e23:	00 00                	add    BYTE PTR [rax],al
    3e25:	00 00                	add    BYTE PTR [rax],al
    3e27:	00 83 01 00 00 00    	add    BYTE PTR [rbx+0x1],al
    3e2d:	00 00                	add    BYTE PTR [rax],al
    3e2f:	00 0b                	add    BYTE PTR [rbx],cl
    3e31:	00 00                	add    BYTE PTR [rax],al
    3e33:	00 00                	add    BYTE PTR [rax],al
    3e35:	00 00                	add    BYTE PTR [rax],al
    3e37:	00 18                	add    BYTE PTR [rax],bl
    3e39:	00 00                	add    BYTE PTR [rax],al
    3e3b:	00 00                	add    BYTE PTR [rax],al
    3e3d:	00 00                	add    BYTE PTR [rax],al
    3e3f:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 3e45 <_DYNAMIC+0xd5>
	...
    3e4d:	00 00                	add    BYTE PTR [rax],al
    3e4f:	00 03                	add    BYTE PTR [rbx],al
    3e51:	00 00                	add    BYTE PTR [rax],al
    3e53:	00 00                	add    BYTE PTR [rax],al
    3e55:	00 00                	add    BYTE PTR [rax],al
    3e57:	00 70 3f             	add    BYTE PTR [rax+0x3f],dh
    3e5a:	00 00                	add    BYTE PTR [rax],al
    3e5c:	00 00                	add    BYTE PTR [rax],al
    3e5e:	00 00                	add    BYTE PTR [rax],al
    3e60:	02 00                	add    al,BYTE PTR [rax]
    3e62:	00 00                	add    BYTE PTR [rax],al
    3e64:	00 00                	add    BYTE PTR [rax],al
    3e66:	00 00                	add    BYTE PTR [rax],al
    3e68:	d8 00                	fadd   DWORD PTR [rax]
    3e6a:	00 00                	add    BYTE PTR [rax],al
    3e6c:	00 00                	add    BYTE PTR [rax],al
    3e6e:	00 00                	add    BYTE PTR [rax],al
    3e70:	14 00                	adc    al,0x0
    3e72:	00 00                	add    BYTE PTR [rax],al
    3e74:	00 00                	add    BYTE PTR [rax],al
    3e76:	00 00                	add    BYTE PTR [rax],al
    3e78:	07                   	(bad)  
    3e79:	00 00                	add    BYTE PTR [rax],al
    3e7b:	00 00                	add    BYTE PTR [rax],al
    3e7d:	00 00                	add    BYTE PTR [rax],al
    3e7f:	00 17                	add    BYTE PTR [rdi],dl
    3e81:	00 00                	add    BYTE PTR [rax],al
    3e83:	00 00                	add    BYTE PTR [rax],al
    3e85:	00 00                	add    BYTE PTR [rax],al
    3e87:	00 c8                	add    al,cl
    3e89:	07                   	(bad)  
    3e8a:	00 00                	add    BYTE PTR [rax],al
    3e8c:	00 00                	add    BYTE PTR [rax],al
    3e8e:	00 00                	add    BYTE PTR [rax],al
    3e90:	07                   	(bad)  
    3e91:	00 00                	add    BYTE PTR [rax],al
    3e93:	00 00                	add    BYTE PTR [rax],al
    3e95:	00 00                	add    BYTE PTR [rax],al
    3e97:	00 c0                	add    al,al
    3e99:	06                   	(bad)  
    3e9a:	00 00                	add    BYTE PTR [rax],al
    3e9c:	00 00                	add    BYTE PTR [rax],al
    3e9e:	00 00                	add    BYTE PTR [rax],al
    3ea0:	08 00                	or     BYTE PTR [rax],al
    3ea2:	00 00                	add    BYTE PTR [rax],al
    3ea4:	00 00                	add    BYTE PTR [rax],al
    3ea6:	00 00                	add    BYTE PTR [rax],al
    3ea8:	08 01                	or     BYTE PTR [rcx],al
    3eaa:	00 00                	add    BYTE PTR [rax],al
    3eac:	00 00                	add    BYTE PTR [rax],al
    3eae:	00 00                	add    BYTE PTR [rax],al
    3eb0:	09 00                	or     DWORD PTR [rax],eax
    3eb2:	00 00                	add    BYTE PTR [rax],al
    3eb4:	00 00                	add    BYTE PTR [rax],al
    3eb6:	00 00                	add    BYTE PTR [rax],al
    3eb8:	18 00                	sbb    BYTE PTR [rax],al
    3eba:	00 00                	add    BYTE PTR [rax],al
    3ebc:	00 00                	add    BYTE PTR [rax],al
    3ebe:	00 00                	add    BYTE PTR [rax],al
    3ec0:	1e                   	(bad)  
    3ec1:	00 00                	add    BYTE PTR [rax],al
    3ec3:	00 00                	add    BYTE PTR [rax],al
    3ec5:	00 00                	add    BYTE PTR [rax],al
    3ec7:	00 08                	add    BYTE PTR [rax],cl
    3ec9:	00 00                	add    BYTE PTR [rax],al
    3ecb:	00 00                	add    BYTE PTR [rax],al
    3ecd:	00 00                	add    BYTE PTR [rax],al
    3ecf:	00 fb                	add    bl,bh
    3ed1:	ff                   	(bad)  
    3ed2:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3ed5:	00 00                	add    BYTE PTR [rax],al
    3ed7:	00 01                	add    BYTE PTR [rcx],al
    3ed9:	00 00                	add    BYTE PTR [rax],al
    3edb:	08 00                	or     BYTE PTR [rax],al
    3edd:	00 00                	add    BYTE PTR [rax],al
    3edf:	00 fe                	add    dh,bh
    3ee1:	ff                   	(bad)  
    3ee2:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3ee5:	00 00                	add    BYTE PTR [rax],al
    3ee7:	00 70 06             	add    BYTE PTR [rax+0x6],dh
    3eea:	00 00                	add    BYTE PTR [rax],al
    3eec:	00 00                	add    BYTE PTR [rax],al
    3eee:	00 00                	add    BYTE PTR [rax],al
    3ef0:	ff                   	(bad)  
    3ef1:	ff                   	(bad)  
    3ef2:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3ef5:	00 00                	add    BYTE PTR [rax],al
    3ef7:	00 02                	add    BYTE PTR [rdx],al
    3ef9:	00 00                	add    BYTE PTR [rax],al
    3efb:	00 00                	add    BYTE PTR [rax],al
    3efd:	00 00                	add    BYTE PTR [rax],al
    3eff:	00 f0                	add    al,dh
    3f01:	ff                   	(bad)  
    3f02:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3f05:	00 00                	add    BYTE PTR [rax],al
    3f07:	00 4c 06 00          	add    BYTE PTR [rsi+rax*1+0x0],cl
    3f0b:	00 00                	add    BYTE PTR [rax],al
    3f0d:	00 00                	add    BYTE PTR [rax],al
    3f0f:	00 f9                	add    cl,bh
    3f11:	ff                   	(bad)  
    3f12:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3f15:	00 00                	add    BYTE PTR [rax],al
    3f17:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...

Disassembly of section .got:

0000000000003f70 <_GLOBAL_OFFSET_TABLE_>:
    3f70:	70 3d                	jo     3faf <_GLOBAL_OFFSET_TABLE_+0x3f>
	...
    3f86:	00 00                	add    BYTE PTR [rax],al
    3f88:	36 10 00             	adc    BYTE PTR ss:[rax],al
    3f8b:	00 00                	add    BYTE PTR [rax],al
    3f8d:	00 00                	add    BYTE PTR [rax],al
    3f8f:	00 46 10             	add    BYTE PTR [rsi+0x10],al
    3f92:	00 00                	add    BYTE PTR [rax],al
    3f94:	00 00                	add    BYTE PTR [rax],al
    3f96:	00 00                	add    BYTE PTR [rax],al
    3f98:	56                   	push   rsi
    3f99:	10 00                	adc    BYTE PTR [rax],al
    3f9b:	00 00                	add    BYTE PTR [rax],al
    3f9d:	00 00                	add    BYTE PTR [rax],al
    3f9f:	00 66 10             	add    BYTE PTR [rsi+0x10],ah
    3fa2:	00 00                	add    BYTE PTR [rax],al
    3fa4:	00 00                	add    BYTE PTR [rax],al
    3fa6:	00 00                	add    BYTE PTR [rax],al
    3fa8:	76 10                	jbe    3fba <_GLOBAL_OFFSET_TABLE_+0x4a>
    3faa:	00 00                	add    BYTE PTR [rax],al
    3fac:	00 00                	add    BYTE PTR [rax],al
    3fae:	00 00                	add    BYTE PTR [rax],al
    3fb0:	86 10                	xchg   BYTE PTR [rax],dl
    3fb2:	00 00                	add    BYTE PTR [rax],al
    3fb4:	00 00                	add    BYTE PTR [rax],al
    3fb6:	00 00                	add    BYTE PTR [rax],al
    3fb8:	96                   	xchg   esi,eax
    3fb9:	10 00                	adc    BYTE PTR [rax],al
    3fbb:	00 00                	add    BYTE PTR [rax],al
    3fbd:	00 00                	add    BYTE PTR [rax],al
    3fbf:	00 a6 10 00 00 00    	add    BYTE PTR [rsi+0x10],ah
    3fc5:	00 00                	add    BYTE PTR [rax],al
    3fc7:	00 b6 10 00 00 00    	add    BYTE PTR [rsi+0x10],dh
	...

Disassembly of section .data:

0000000000004000 <__data_start>:
	...

0000000000004008 <__dso_handle>:
    4008:	08 40 00             	or     BYTE PTR [rax+0x0],al
    400b:	00 00                	add    BYTE PTR [rax],al
    400d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .bss:

0000000000004020 <_ZSt4cout@@GLIBCXX_3.4>:
	...

0000000000004130 <completed.7963>:
	...

0000000000004140 <memo>:
	...

0000000000004158 <_ZStL8__ioinit>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <_init-0xf88>
   a:	74 75                	je     81 <_init-0xf7f>
   c:	20 38                	and    BYTE PTR [rax],bh
   e:	2e 33 2e             	xor    ebp,DWORD PTR cs:[rsi]
  11:	30 2d 36 75 62 75    	xor    BYTE PTR [rip+0x75627536],ch        # 7562754d <_end+0x756233ed>
  17:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  18:	74 75                	je     8f <_init-0xf71>
  1a:	31 29                	xor    DWORD PTR [rcx],ebp
  1c:	20 38                	and    BYTE PTR [rax],bh
  1e:	2e 33 2e             	xor    ebp,DWORD PTR cs:[rsi]
  21:	30 00                	xor    BYTE PTR [rax],al

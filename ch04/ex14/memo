[
  {
    "url": "https://api.github.com/repos/rust-lang/rust/issues/63081",
    "repository_url": "https://api.github.com/repos/rust-lang/rust",
    "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63081/labels{/name}",
    "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63081/comments",
    "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63081/events",
    "html_url": "https://github.com/rust-lang/rust/pull/63081",
    "id": 473737120,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzAxODI2NTEy",
    "number": 63081,
    "title": "tidy: Cleanup the directory whitelist",
    "user": {
      "login": "petrochenkov",
      "id": 5751617,
      "node_id": "MDQ6VXNlcjU3NTE2MTc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5751617?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petrochenkov",
      "html_url": "https://github.com/petrochenkov",
      "followers_url": "https://api.github.com/users/petrochenkov/followers",
      "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}",
      "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions",
      "organizations_url": "https://api.github.com/users/petrochenkov/orgs",
      "repos_url": "https://api.github.com/users/petrochenkov/repos",
      "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petrochenkov/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 583426710,
        "node_id": "MDU6TGFiZWw1ODM0MjY3MTA=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/S-waiting-on-review",
        "name": "S-waiting-on-review",
        "color": "d3dddd",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "Mark-Simulacrum",
      "id": 5047365,
      "node_id": "MDQ6VXNlcjUwNDczNjU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5047365?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Mark-Simulacrum",
      "html_url": "https://github.com/Mark-Simulacrum",
      "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers",
      "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}",
      "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions",
      "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs",
      "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos",
      "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "Mark-Simulacrum",
        "id": 5047365,
        "node_id": "MDQ6VXNlcjUwNDczNjU=",
        "avatar_url": "https://avatars0.githubusercontent.com/u/5047365?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Mark-Simulacrum",
        "html_url": "https://github.com/Mark-Simulacrum",
        "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers",
        "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}",
        "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions",
        "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs",
        "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos",
        "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-07-28T12:11:02Z",
    "updated_at": "2019-07-28T12:11:12Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/rust-lang/rust/pulls/63081",
      "html_url": "https://github.com/rust-lang/rust/pull/63081",
      "diff_url": "https://github.com/rust-lang/rust/pull/63081.diff",
      "patch_url": "https://github.com/rust-lang/rust/pull/63081.patch"
    },
    "body": "Some entries were outdated - pre-\"llvm-project\", pre-\"crates.io\", pre-\"Cargo.toml outside of src\".\r\nSome entries were unnecessary - `owning_ref` could be fixed and directories outside of `src` are not visited by tidy at all.\r\n\r\nr? @Mark-Simulacrum "
  },
  {
    "url": "https://api.github.com/repos/rust-lang/rust/issues/63080",
    "repository_url": "https://api.github.com/repos/rust-lang/rust",
    "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63080/labels{/name}",
    "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63080/comments",
    "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63080/events",
    "html_url": "https://github.com/rust-lang/rust/issues/63080",
    "id": 473735870,
    "node_id": "MDU6SXNzdWU0NzM3MzU4NzA=",
    "number": 63080,
    "title": "Rustdoc should index \"Methods from Deref\" in search results",
    "user": {
      "login": "crlf0710",
      "id": 451806,
      "node_id": "MDQ6VXNlcjQ1MTgwNg==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/451806?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/crlf0710",
      "html_url": "https://github.com/crlf0710",
      "followers_url": "https://api.github.com/users/crlf0710/followers",
      "following_url": "https://api.github.com/users/crlf0710/following{/other_user}",
      "gists_url": "https://api.github.com/users/crlf0710/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/crlf0710/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/crlf0710/subscriptions",
      "organizations_url": "https://api.github.com/users/crlf0710/orgs",
      "repos_url": "https://api.github.com/users/crlf0710/repos",
      "events_url": "https://api.github.com/users/crlf0710/events{/privacy}",
      "received_events_url": "https://api.github.com/users/crlf0710/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 234902,
        "node_id": "MDU6TGFiZWwyMzQ5MDI=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement",
        "name": "C-enhancement",
        "color": "f5f1fd",
        "default": false
      },
      {
        "id": 203738,
        "node_id": "MDU6TGFiZWwyMDM3Mzg=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc",
        "name": "T-rustdoc",
        "color": "bfd4f2",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-07-28T11:56:10Z",
    "updated_at": "2019-07-28T11:57:27Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "Rustdoc should index \"Methods from Deref\" in search results, and mark them somehow. So people be able to find something like `Vec::last` during search."
  },
  {
    "url": "https://api.github.com/repos/rust-lang/rust/issues/63079",
    "repository_url": "https://api.github.com/repos/rust-lang/rust",
    "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63079/labels{/name}",
    "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63079/comments",
    "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63079/events",
    "html_url": "https://github.com/rust-lang/rust/pull/63079",
    "id": 473734947,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzAxODI0OTQ5",
    "number": 63079,
    "title": "CTFE: simplify ConstValue by not checking for alignment",
    "user": {
      "login": "RalfJung",
      "id": 330628,
      "node_id": "MDQ6VXNlcjMzMDYyOA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/330628?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RalfJung",
      "html_url": "https://github.com/RalfJung",
      "followers_url": "https://api.github.com/users/RalfJung/followers",
      "following_url": "https://api.github.com/users/RalfJung/following{/other_user}",
      "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions",
      "organizations_url": "https://api.github.com/users/RalfJung/orgs",
      "repos_url": "https://api.github.com/users/RalfJung/repos",
      "events_url": "https://api.github.com/users/RalfJung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RalfJung/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 583426710,
        "node_id": "MDU6TGFiZWw1ODM0MjY3MTA=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/S-waiting-on-review",
        "name": "S-waiting-on-review",
        "color": "d3dddd",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "oli-obk",
      "id": 332036,
      "node_id": "MDQ6VXNlcjMzMjAzNg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/332036?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/oli-obk",
      "html_url": "https://github.com/oli-obk",
      "followers_url": "https://api.github.com/users/oli-obk/followers",
      "following_url": "https://api.github.com/users/oli-obk/following{/other_user}",
      "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions",
      "organizations_url": "https://api.github.com/users/oli-obk/orgs",
      "repos_url": "https://api.github.com/users/oli-obk/repos",
      "events_url": "https://api.github.com/users/oli-obk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/oli-obk/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "oli-obk",
        "id": 332036,
        "node_id": "MDQ6VXNlcjMzMjAzNg==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/332036?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/oli-obk",
        "html_url": "https://github.com/oli-obk",
        "followers_url": "https://api.github.com/users/oli-obk/followers",
        "following_url": "https://api.github.com/users/oli-obk/following{/other_user}",
        "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions",
        "organizations_url": "https://api.github.com/users/oli-obk/orgs",
        "repos_url": "https://api.github.com/users/oli-obk/repos",
        "events_url": "https://api.github.com/users/oli-obk/events{/privacy}",
        "received_events_url": "https://api.github.com/users/oli-obk/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-07-28T11:45:01Z",
    "updated_at": "2019-07-28T13:08:17Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/rust-lang/rust/pulls/63079",
      "html_url": "https://github.com/rust-lang/rust/pull/63079",
      "diff_url": "https://github.com/rust-lang/rust/pull/63079.diff",
      "patch_url": "https://github.com/rust-lang/rust/pull/63079.patch"
    },
    "body": "I hope the test suite actually covers the problematic cases here?\r\n\r\nr? @oli-obk"
  },
  {
    "url": "https://api.github.com/repos/rust-lang/rust/issues/63078",
    "repository_url": "https://api.github.com/repos/rust-lang/rust",
    "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63078/labels{/name}",
    "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63078/comments",
    "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63078/events",
    "html_url": "https://github.com/rust-lang/rust/issues/63078",
    "id": 473734845,
    "node_id": "MDU6SXNzdWU0NzM3MzQ4NDU=",
    "number": 63078,
    "title": "E0277 should put emphasis on containing function's return type",
    "user": {
      "login": "mibac138",
      "id": 5672750,
      "node_id": "MDQ6VXNlcjU2NzI3NTA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5672750?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mibac138",
      "html_url": "https://github.com/mibac138",
      "followers_url": "https://api.github.com/users/mibac138/followers",
      "following_url": "https://api.github.com/users/mibac138/following{/other_user}",
      "gists_url": "https://api.github.com/users/mibac138/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mibac138/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mibac138/subscriptions",
      "organizations_url": "https://api.github.com/users/mibac138/orgs",
      "repos_url": "https://api.github.com/users/mibac138/repos",
      "events_url": "https://api.github.com/users/mibac138/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mibac138/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 235791,
        "node_id": "MDU6TGFiZWwyMzU3OTE=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics",
        "name": "A-diagnostics",
        "color": "f7e101",
        "default": false
      },
      {
        "id": 234902,
        "node_id": "MDU6TGFiZWwyMzQ5MDI=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement",
        "name": "C-enhancement",
        "color": "f5f1fd",
        "default": false
      },
      {
        "id": 211668100,
        "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler",
        "name": "T-compiler",
        "color": "bfd4f2",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-07-28T11:43:45Z",
    "updated_at": "2019-07-28T11:52:02Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "I got the following error today:\r\n```\r\nerror[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)\r\n  --> src/main.rs:29:20\r\n   |\r\n29 |     let mut resp = reqwest::get(\"...\")?;\r\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot use the `?` operator in a function that returns `()`\r\n   |\r\n   = help: the trait `std::ops::Try` is not implemented for `()`\r\n   = note: required by `std::ops::Try::from_error`\r\n```\r\nI was confused for a minute as I misinterpreted what the error was saying. I double-checked that `reqwest::get` does indeed return a `Result` but a moment later I realized that it's the function that's containing `reqwest::get` I should be looking at which indeed did return `()` after which I fixed the issue. \r\n\r\nI believe this error message could be somehow improved and/or worded differently to put more stress on the containing function - after all, that's what I should've looked at (maybe the containing function should be even shown in the error message like `reqwest::get` is?) though I can see how it can not always be the case. However I do still think both the containing method's return type _and_ the `reqwest::get` call the be highlighted for the best experience and to easily allow full understanding of what's happening."
  },
  {
    "url": "https://api.github.com/repos/rust-lang/rust/issues/63077",
    "repository_url": "https://api.github.com/repos/rust-lang/rust",
    "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63077/labels{/name}",
    "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63077/comments",
    "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63077/events",
    "html_url": "https://github.com/rust-lang/rust/pull/63077",
    "id": 473732806,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzAxODIzNDQ1",
    "number": 63077,
    "title": "cleanup: Remove some language features related to built-in macros",
    "user": {
      "login": "petrochenkov",
      "id": 5751617,
      "node_id": "MDQ6VXNlcjU3NTE2MTc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5751617?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petrochenkov",
      "html_url": "https://github.com/petrochenkov",
      "followers_url": "https://api.github.com/users/petrochenkov/followers",
      "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}",
      "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions",
      "organizations_url": "https://api.github.com/users/petrochenkov/orgs",
      "repos_url": "https://api.github.com/users/petrochenkov/repos",
      "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petrochenkov/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 583426710,
        "node_id": "MDU6TGFiZWw1ODM0MjY3MTA=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/S-waiting-on-review",
        "name": "S-waiting-on-review",
        "color": "d3dddd",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "nikomatsakis",
      "id": 155238,
      "node_id": "MDQ6VXNlcjE1NTIzOA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/155238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nikomatsakis",
      "html_url": "https://github.com/nikomatsakis",
      "followers_url": "https://api.github.com/users/nikomatsakis/followers",
      "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}",
      "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions",
      "organizations_url": "https://api.github.com/users/nikomatsakis/orgs",
      "repos_url": "https://api.github.com/users/nikomatsakis/repos",
      "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nikomatsakis/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "nikomatsakis",
        "id": 155238,
        "node_id": "MDQ6VXNlcjE1NTIzOA==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/155238?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nikomatsakis",
        "html_url": "https://github.com/nikomatsakis",
        "followers_url": "https://api.github.com/users/nikomatsakis/followers",
        "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}",
        "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions",
        "organizations_url": "https://api.github.com/users/nikomatsakis/orgs",
        "repos_url": "https://api.github.com/users/nikomatsakis/repos",
        "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nikomatsakis/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-07-28T11:18:12Z",
    "updated_at": "2019-07-28T11:18:24Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/rust-lang/rust/pulls/63077",
      "html_url": "https://github.com/rust-lang/rust/pull/63077",
      "diff_url": "https://github.com/rust-lang/rust/pull/63077.diff",
      "patch_url": "https://github.com/rust-lang/rust/pull/63077.patch"
    },
    "body": "They are now library features.\r\nCleanup after https://github.com/rust-lang/rust/pull/62086.\r\nThe unstable book files are moved because tidy complained."
  },
  {
    "url": "https://api.github.com/repos/rust-lang/rust/issues/63076",
    "repository_url": "https://api.github.com/repos/rust-lang/rust",
    "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63076/labels{/name}",
    "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63076/comments",
    "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63076/events",
    "html_url": "https://github.com/rust-lang/rust/pull/63076",
    "id": 473731598,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzAxODIyNjA0",
    "number": 63076,
    "title": "Miri: fix determining size of an \"extra function\" allocation",
    "user": {
      "login": "RalfJung",
      "id": 330628,
      "node_id": "MDQ6VXNlcjMzMDYyOA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/330628?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RalfJung",
      "html_url": "https://github.com/RalfJung",
      "followers_url": "https://api.github.com/users/RalfJung/followers",
      "following_url": "https://api.github.com/users/RalfJung/following{/other_user}",
      "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions",
      "organizations_url": "https://api.github.com/users/RalfJung/orgs",
      "repos_url": "https://api.github.com/users/RalfJung/repos",
      "events_url": "https://api.github.com/users/RalfJung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RalfJung/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 583426710,
        "node_id": "MDU6TGFiZWw1ODM0MjY3MTA=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/S-waiting-on-review",
        "name": "S-waiting-on-review",
        "color": "d3dddd",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "oli-obk",
      "id": 332036,
      "node_id": "MDQ6VXNlcjMzMjAzNg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/332036?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/oli-obk",
      "html_url": "https://github.com/oli-obk",
      "followers_url": "https://api.github.com/users/oli-obk/followers",
      "following_url": "https://api.github.com/users/oli-obk/following{/other_user}",
      "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions",
      "organizations_url": "https://api.github.com/users/oli-obk/orgs",
      "repos_url": "https://api.github.com/users/oli-obk/repos",
      "events_url": "https://api.github.com/users/oli-obk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/oli-obk/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "oli-obk",
        "id": 332036,
        "node_id": "MDQ6VXNlcjMzMjAzNg==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/332036?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/oli-obk",
        "html_url": "https://github.com/oli-obk",
        "followers_url": "https://api.github.com/users/oli-obk/followers",
        "following_url": "https://api.github.com/users/oli-obk/following{/other_user}",
        "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions",
        "organizations_url": "https://api.github.com/users/oli-obk/orgs",
        "repos_url": "https://api.github.com/users/oli-obk/repos",
        "events_url": "https://api.github.com/users/oli-obk/events{/privacy}",
        "received_events_url": "https://api.github.com/users/oli-obk/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-07-28T11:03:09Z",
    "updated_at": "2019-07-28T11:26:59Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/rust-lang/rust/pulls/63076",
      "html_url": "https://github.com/rust-lang/rust/pull/63076",
      "diff_url": "https://github.com/rust-lang/rust/pull/63076.diff",
      "patch_url": "https://github.com/rust-lang/rust/pull/63076.patch"
    },
    "body": "Fixes [a bug](https://github.com/rust-lang/miri/pull/862) introduced by https://github.com/rust-lang/rust/pull/62982. Best reviewed commit-by-commit.\r\n\r\nr? @oli-obk"
  },
  {
    "url": "https://api.github.com/repos/rust-lang/rust/issues/63075",
    "repository_url": "https://api.github.com/repos/rust-lang/rust",
    "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63075/labels{/name}",
    "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63075/comments",
    "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63075/events",
    "html_url": "https://github.com/rust-lang/rust/pull/63075",
    "id": 473729363,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzAxODIxMDcz",
    "number": 63075,
    "title": "Miri: Check that a ptr is aligned and inbounds already when evaluating `*`",
    "user": {
      "login": "RalfJung",
      "id": 330628,
      "node_id": "MDQ6VXNlcjMzMDYyOA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/330628?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RalfJung",
      "html_url": "https://github.com/RalfJung",
      "followers_url": "https://api.github.com/users/RalfJung/followers",
      "following_url": "https://api.github.com/users/RalfJung/following{/other_user}",
      "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions",
      "organizations_url": "https://api.github.com/users/RalfJung/orgs",
      "repos_url": "https://api.github.com/users/RalfJung/repos",
      "events_url": "https://api.github.com/users/RalfJung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RalfJung/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 583426710,
        "node_id": "MDU6TGFiZWw1ODM0MjY3MTA=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/S-waiting-on-review",
        "name": "S-waiting-on-review",
        "color": "d3dddd",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "oli-obk",
      "id": 332036,
      "node_id": "MDQ6VXNlcjMzMjAzNg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/332036?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/oli-obk",
      "html_url": "https://github.com/oli-obk",
      "followers_url": "https://api.github.com/users/oli-obk/followers",
      "following_url": "https://api.github.com/users/oli-obk/following{/other_user}",
      "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions",
      "organizations_url": "https://api.github.com/users/oli-obk/orgs",
      "repos_url": "https://api.github.com/users/oli-obk/repos",
      "events_url": "https://api.github.com/users/oli-obk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/oli-obk/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "oli-obk",
        "id": 332036,
        "node_id": "MDQ6VXNlcjMzMjAzNg==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/332036?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/oli-obk",
        "html_url": "https://github.com/oli-obk",
        "followers_url": "https://api.github.com/users/oli-obk/followers",
        "following_url": "https://api.github.com/users/oli-obk/following{/other_user}",
        "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions",
        "organizations_url": "https://api.github.com/users/oli-obk/orgs",
        "repos_url": "https://api.github.com/users/oli-obk/repos",
        "events_url": "https://api.github.com/users/oli-obk/events{/privacy}",
        "received_events_url": "https://api.github.com/users/oli-obk/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-07-28T10:31:36Z",
    "updated_at": "2019-07-28T12:25:15Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/rust-lang/rust/pulls/63075",
      "html_url": "https://github.com/rust-lang/rust/pull/63075",
      "diff_url": "https://github.com/rust-lang/rust/pull/63075.diff",
      "patch_url": "https://github.com/rust-lang/rust/pull/63075.patch"
    },
    "body": "This syncs Miri with what the Nomicon and the Reference say, and resolves https://github.com/rust-lang/miri/issues/447.\r\n\r\nAlso this would not have worked without https://github.com/rust-lang/rust/pull/62982 due to new cycles. ;)\r\n\r\nr? @oli-obk"
  },
  {
    "url": "https://api.github.com/repos/rust-lang/rust/issues/63073",
    "repository_url": "https://api.github.com/repos/rust-lang/rust",
    "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63073/labels{/name}",
    "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63073/comments",
    "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63073/events",
    "html_url": "https://github.com/rust-lang/rust/issues/63073",
    "id": 473721797,
    "node_id": "MDU6SXNzdWU0NzM3MjE3OTc=",
    "number": 63073,
    "title": "New trait for types which can report memory usage",
    "user": {
      "login": "windelbouwman",
      "id": 1816500,
      "node_id": "MDQ6VXNlcjE4MTY1MDA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1816500?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/windelbouwman",
      "html_url": "https://github.com/windelbouwman",
      "followers_url": "https://api.github.com/users/windelbouwman/followers",
      "following_url": "https://api.github.com/users/windelbouwman/following{/other_user}",
      "gists_url": "https://api.github.com/users/windelbouwman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/windelbouwman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/windelbouwman/subscriptions",
      "organizations_url": "https://api.github.com/users/windelbouwman/orgs",
      "repos_url": "https://api.github.com/users/windelbouwman/repos",
      "events_url": "https://api.github.com/users/windelbouwman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/windelbouwman/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 630652267,
        "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request",
        "name": "C-feature-request",
        "color": "f5f1fd",
        "default": false
      },
      {
        "id": 211668062,
        "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs",
        "name": "T-libs",
        "color": "bfd4f2",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2019-07-28T08:55:27Z",
    "updated_at": "2019-07-28T10:24:56Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Hi all,\r\n\r\nIn the course of implementing the sizeof operator in rustpython, we stumbled upon a feature we possibly lack: the ability to request the true memory usage of a struct. Meaning, the memory usage of the struct itself, as reported by `std::mem::size_of` and friends, but also the size of the dynamically allocated heap structures, such as `Vec`.\r\n\r\nOur current approach is to dive into the inner workings of the bigint type, but this is probably undesirable, since the resulting code is unsafe.\r\n\r\nThe proposed change can be viewed here:\r\n\r\nhttps://github.com/RustPython/RustPython/pull/1172/files\r\n\r\nMy request, would be to have a trait in the `alloc` crate or `std::mem` crate, which can be implemented by other packages, which support the reporting of dynamic memory by an object.\r\n\r\nExample of the trait:\r\n\r\n```rust\r\ntrait DynamicSizeOf {\r\n    /// Returns the memory used by this type, including all its nested fields\r\n    /// which are dynamically allocated.\r\n    fn sizeof(&self) -> usize\r\n}\r\n\r\nimpl DynamicSizeOf for BigInt {\r\n    fn sizeof(&self) -> usize {\r\n         // arbitrarily deep query on sub structures memory usage.\r\n    }\r\n}\r\n\r\n```\r\n\r\nPlease also see the related issue here: https://github.com/rust-num/num-bigint/issues/98\r\n\r\nIs this a good idea? Are there other options available to achieve the same behavior?\r\n\r\n@askaholic and @cuviper what are your opinions on this topic? Do you see other ideas?"
  },
  {
    "url": "https://api.github.com/repos/rust-lang/rust/issues/63068",
    "repository_url": "https://api.github.com/repos/rust-lang/rust",
    "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63068/labels{/name}",
    "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63068/comments",
    "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63068/events",
    "html_url": "https://github.com/rust-lang/rust/issues/63068",
    "id": 473716688,
    "node_id": "MDU6SXNzdWU0NzM3MTY2ODg=",
    "number": 63068,
    "title": "Tracking issue for RFC 2574, \"SIMD vectors in FFI\"",
    "user": {
      "login": "Centril",
      "id": 855702,
      "node_id": "MDQ6VXNlcjg1NTcwMg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/855702?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Centril",
      "html_url": "https://github.com/Centril",
      "followers_url": "https://api.github.com/users/Centril/followers",
      "following_url": "https://api.github.com/users/Centril/following{/other_user}",
      "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Centril/subscriptions",
      "organizations_url": "https://api.github.com/users/Centril/orgs",
      "repos_url": "https://api.github.com/users/Centril/repos",
      "events_url": "https://api.github.com/users/Centril/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Centril/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 45472092,
        "node_id": "MDU6TGFiZWw0NTQ3MjA5Mg==",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/A-ffi",
        "name": "A-ffi",
        "color": "f7e101",
        "default": false
      },
      {
        "id": 631737389,
        "node_id": "MDU6TGFiZWw2MzE3MzczODk=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/A-simd",
        "name": "A-simd",
        "color": "f7e101",
        "default": false
      },
      {
        "id": 89436934,
        "node_id": "MDU6TGFiZWw4OTQzNjkzNA==",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/B-RFC-approved",
        "name": "B-RFC-approved",
        "color": "d304cb",
        "default": false
      },
      {
        "id": 650846969,
        "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue",
        "name": "C-tracking-issue",
        "color": "f5f1fd",
        "default": false
      },
      {
        "id": 1472557610,
        "node_id": "MDU6TGFiZWwxNDcyNTU3NjEw",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/F-simd_ffi",
        "name": "F-simd_ffi",
        "color": "f9c0cc",
        "default": false
      },
      {
        "id": 211668100,
        "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler",
        "name": "T-compiler",
        "color": "bfd4f2",
        "default": false
      },
      {
        "id": 211668019,
        "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang",
        "name": "T-lang",
        "color": "bfd4f2",
        "default": false
      },
      {
        "id": 1472563007,
        "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly",
        "name": "requires-nightly",
        "color": "76dcde",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-07-28T07:52:37Z",
    "updated_at": "2019-07-28T07:58:49Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "This is a tracking issue for the RFC \"SIMD vectors in FFI\" (rust-lang/rfcs#2574).\r\nThe feature gate is `#![feature(simd_ffi)]`.\r\n\r\n**Steps:**\r\n\r\n- [ ] Implement the RFC (cc @rkruppe @gnzlbg); WIP in https://github.com/rust-lang/rust/pull/59238.\r\n- [ ] Adjust documentation ([see instructions on rustc-guide][doc-guide])\r\n- [ ] Stabilization PR ([see instructions on rustc-guide][stabilization-guide])\r\n\r\n[stabilization-guide]: https://rust-lang.github.io/rustc-guide/stabilization_guide.html#stabilization-pr\r\n[doc-guide]: https://rust-lang.github.io/rustc-guide/stabilization_guide.html#documentation-prs\r\n\r\n**Unresolved questions:**\r\n\r\n- [ ] Should it be possible to use, e.g., `__m128` on C FFI when the `avx` feature is enabled? Does that change the calling convention and make doing so unsafe ? We could extend this RFC to also require that to use certain types certain features must be disabled."
  },
  {
    "url": "https://api.github.com/repos/rust-lang/rust/issues/63066",
    "repository_url": "https://api.github.com/repos/rust-lang/rust",
    "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63066/labels{/name}",
    "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63066/comments",
    "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63066/events",
    "html_url": "https://github.com/rust-lang/rust/issues/63066",
    "id": 473711683,
    "node_id": "MDU6SXNzdWU0NzM3MTE2ODM=",
    "number": 63066,
    "title": "Meta tracking issue for `impl Trait`",
    "user": {
      "login": "Centril",
      "id": 855702,
      "node_id": "MDQ6VXNlcjg1NTcwMg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/855702?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Centril",
      "html_url": "https://github.com/Centril",
      "followers_url": "https://api.github.com/users/Centril/followers",
      "following_url": "https://api.github.com/users/Centril/following{/other_user}",
      "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Centril/subscriptions",
      "organizations_url": "https://api.github.com/users/Centril/orgs",
      "repos_url": "https://api.github.com/users/Centril/repos",
      "events_url": "https://api.github.com/users/Centril/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Centril/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 631673608,
        "node_id": "MDU6TGFiZWw2MzE2NzM2MDg=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/A-impl-trait",
        "name": "A-impl-trait",
        "color": "f7e101",
        "default": false
      },
      {
        "id": 650846969,
        "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue",
        "name": "C-tracking-issue",
        "color": "f5f1fd",
        "default": false
      },
      {
        "id": 211668100,
        "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler",
        "name": "T-compiler",
        "color": "bfd4f2",
        "default": false
      },
      {
        "id": 211668019,
        "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang",
        "name": "T-lang",
        "color": "bfd4f2",
        "default": false
      },
      {
        "id": 37977651,
        "node_id": "MDU6TGFiZWwzNzk3NzY1MQ==",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/metabug",
        "name": "metabug",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-07-28T06:38:44Z",
    "updated_at": "2019-07-28T06:51:55Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "This issue tracks the progress of `impl Trait` in general.\r\n\r\nThis issue is not for discussion about specific extensions to `impl Trait` and only exists to provide links to other places that track the progress of specific issues. If you wish to discuss some subject related to `impl Trait`, please find an existing appropriate issue below or create an new issue and comment here with a link to the newly created issue.\r\n\r\n--------------------------\r\n\r\nThe `impl Trait` related issues currently on deck are as follows:\r\n\r\n* [ ] [Label `A-impl-trait`](https://github.com/rust-lang/rust/labels/A-impl-trait)\r\n\r\n* [ ] Permit `type Foo = impl Bar;`. https://github.com/rust-lang/rust/issues/63063\r\n\r\n   * [ ] Permit `type Foo = impl Bar;` in `trait` definitions. https://github.com/rust-lang/rust/issues/29661\r\n\r\n* [ ] In `const` and  `static` items and `let` bindings. https://github.com/rust-lang/rust/issues/63065\r\n\r\n* [ ] Member constraints in region inference: https://github.com/rust-lang/rust/issues/61997\r\n\r\n* [ ] Existential lifetimes. https://github.com/rust-lang/rust/issues/60670\r\n\r\n* [ ] Support lifetime elision in argument position. https://github.com/rust-lang/rust/issues/49287\r\n\r\n* [ ] Should we allow `impl Trait` after `->` in `fn` types or parentheses sugar? https://github.com/rust-lang/rust/issues/45994\r\n\r\n* [ ] Do we have to impose a DAG across all functions to allow for auto-safe leakage, or can we use some kind of deferral.\r\n   - Discussion: https://github.com/rust-lang/rust/pull/35091#discussion_r73738398\r\n   - Present semantics: DAG.\r\n\r\n* [ ] Should we permit specifying types if some parameters are implicit and some are explicit? e.g., `fn foo<T>(x: impl Iterator<Item = T>>)`?\r\n    - Current behavior: An error to specify types\r\n    - Other alternatives: [treat `impl Trait` as arguments in the list, permitting migration]\r\n\r\n* [ ] [Some concerns about nested impl Trait usage](https://github.com/rust-lang/rust/issues/34511#issuecomment-350715858)\r\n\r\n--------------------------\r\n\r\nOpen RFCs:\r\n\r\nNone."
  },
  {
    "url": "https://api.github.com/repos/rust-lang/rust/issues/63065",
    "repository_url": "https://api.github.com/repos/rust-lang/rust",
    "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63065/labels{/name}",
    "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63065/comments",
    "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63065/events",
    "html_url": "https://github.com/rust-lang/rust/issues/63065",
    "id": 473711570,
    "node_id": "MDU6SXNzdWU0NzM3MTE1NzA=",
    "number": 63065,
    "title": "Tracking issue for `impl Trait` in `const` and `static` items and `let` bindings",
    "user": {
      "login": "Centril",
      "id": 855702,
      "node_id": "MDQ6VXNlcjg1NTcwMg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/855702?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Centril",
      "html_url": "https://github.com/Centril",
      "followers_url": "https://api.github.com/users/Centril/followers",
      "following_url": "https://api.github.com/users/Centril/following{/other_user}",
      "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Centril/subscriptions",
      "organizations_url": "https://api.github.com/users/Centril/orgs",
      "repos_url": "https://api.github.com/users/Centril/repos",
      "events_url": "https://api.github.com/users/Centril/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Centril/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 631673608,
        "node_id": "MDU6TGFiZWw2MzE2NzM2MDg=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/A-impl-trait",
        "name": "A-impl-trait",
        "color": "f7e101",
        "default": false
      },
      {
        "id": 89436934,
        "node_id": "MDU6TGFiZWw4OTQzNjkzNA==",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/B-RFC-approved",
        "name": "B-RFC-approved",
        "color": "d304cb",
        "default": false
      },
      {
        "id": 246778137,
        "node_id": "MDU6TGFiZWwyNDY3NzgxMzc=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/B-unstable",
        "name": "B-unstable",
        "color": "d304cb",
        "default": false
      },
      {
        "id": 650846969,
        "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue",
        "name": "C-tracking-issue",
        "color": "f5f1fd",
        "default": false
      },
      {
        "id": 1472505091,
        "node_id": "MDU6TGFiZWwxNDcyNTA1MDkx",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/F-impl_trait_in_bindings",
        "name": "F-impl_trait_in_bindings",
        "color": "f9c0cc",
        "default": false
      },
      {
        "id": 211668019,
        "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang",
        "name": "T-lang",
        "color": "bfd4f2",
        "default": false
      },
      {
        "id": 1472563007,
        "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly",
        "name": "requires-nightly",
        "color": "76dcde",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-07-28T06:36:47Z",
    "updated_at": "2019-07-28T08:03:37Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "As provided for by rust-lang/rfcs#2071, this is a tracking issue for `impl Trait` in:\r\n- `const` items\r\n- `static` items\r\n- `let` bindings\r\n\r\n**Steps:**\r\n\r\n- [x] Implement the RFC\r\n   - There are bugs...\r\n- [ ] Adjust documentation ([see instructions on rustc-guide][doc-guide])\r\n- [ ] Stabilization PR ([see instructions on rustc-guide][stabilization-guide])\r\n\r\n[stabilization-guide]: https://rust-lang.github.io/rustc-guide/stabilization_guide.html#stabilization-pr\r\n[doc-guide]: https://rust-lang.github.io/rustc-guide/stabilization_guide.html#documentation-prs\r\n\r\n**Unresolved questions:**\r\n\r\n- [ ] Should the part about `let` bindings be recast more generally to be about *coercions*? This would allow `foo as impl Debug` and `foo: impl Debug` as well."
  },
  {
    "url": "https://api.github.com/repos/rust-lang/rust/issues/63064",
    "repository_url": "https://api.github.com/repos/rust-lang/rust",
    "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63064/labels{/name}",
    "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63064/comments",
    "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63064/events",
    "html_url": "https://github.com/rust-lang/rust/issues/63064",
    "id": 473711472,
    "node_id": "MDU6SXNzdWU0NzM3MTE0NzI=",
    "number": 63064,
    "title": "dead_code lint highlights too much on functions with multi-line signatures",
    "user": {
      "login": "alvinhochun",
      "id": 2397650,
      "node_id": "MDQ6VXNlcjIzOTc2NTA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2397650?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alvinhochun",
      "html_url": "https://github.com/alvinhochun",
      "followers_url": "https://api.github.com/users/alvinhochun/followers",
      "following_url": "https://api.github.com/users/alvinhochun/following{/other_user}",
      "gists_url": "https://api.github.com/users/alvinhochun/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alvinhochun/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alvinhochun/subscriptions",
      "organizations_url": "https://api.github.com/users/alvinhochun/orgs",
      "repos_url": "https://api.github.com/users/alvinhochun/repos",
      "events_url": "https://api.github.com/users/alvinhochun/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alvinhochun/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 235791,
        "node_id": "MDU6TGFiZWwyMzU3OTE=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics",
        "name": "A-diagnostics",
        "color": "f7e101",
        "default": false
      },
      {
        "id": 235137,
        "node_id": "MDU6TGFiZWwyMzUxMzc=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lint",
        "name": "A-lint",
        "color": "f7e101",
        "default": false
      },
      {
        "id": 650731663,
        "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug",
        "name": "C-bug",
        "color": "f5f1fd",
        "default": false
      },
      {
        "id": 211668100,
        "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler",
        "name": "T-compiler",
        "color": "bfd4f2",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-07-28T06:35:16Z",
    "updated_at": "2019-07-28T10:22:33Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "With the following example code:\r\n\r\n```rust\r\nfn unused() {\r\n    println!(\"blah\");\r\n}\r\n\r\nfn unused2(var: i32) {\r\n    println!(\"foo {}\", var);\r\n}\r\n\r\nfn unused3(\r\n    var: i32,\r\n) {\r\n    println!(\"bar {}\", var);\r\n}\r\n\r\nfn main() {\r\n    println!(\"Hello world!\");\r\n}\r\n```\r\n\r\n([Playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=4324b40a5ff41a984e1e6dd7a04f1753))\r\n\r\nThe compiler produces these warnings:\r\n\r\n```\r\nwarning: function is never used: `unused`\r\n --> src/main.rs:1:1\r\n  |\r\n1 | fn unused() {\r\n  | ^^^^^^^^^^^\r\n  |\r\n  = note: `#[warn(dead_code)]` on by default\r\n\r\nwarning: function is never used: `unused2`\r\n --> src/main.rs:5:1\r\n  |\r\n5 | fn unused2(var: i32) {\r\n  | ^^^^^^^^^^^^^^^^^^^^\r\n\r\nwarning: function is never used: `unused3`\r\n  --> src/main.rs:9:1\r\n   |\r\n9  | / fn unused3(\r\n10 | |     var: i32,\r\n11 | | ) {\r\n12 | |     println!(\"bar {}\", var);\r\n13 | | }\r\n   | |_^\r\n```\r\n\r\nNotice that for `fn unused` and `fn unused2`, `dead_code` is reported on only the first line signature of the function, however for `fn unused3` `dead_code` is reported on the whole function from start to finish.\r\n\r\nThis is mostly annoying when writing new functions in an editor like vscode that rls will cause the whole function to be orange-wavy-underlined, making a huge distraction."
  },
  {
    "url": "https://api.github.com/repos/rust-lang/rust/issues/63063",
    "repository_url": "https://api.github.com/repos/rust-lang/rust",
    "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63063/labels{/name}",
    "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63063/comments",
    "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63063/events",
    "html_url": "https://github.com/rust-lang/rust/issues/63063",
    "id": 473710023,
    "node_id": "MDU6SXNzdWU0NzM3MTAwMjM=",
    "number": 63063,
    "title": "Tracking issue for RFC 2515, \"Permit impl Trait in type aliases\"",
    "user": {
      "login": "Centril",
      "id": 855702,
      "node_id": "MDQ6VXNlcjg1NTcwMg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/855702?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Centril",
      "html_url": "https://github.com/Centril",
      "followers_url": "https://api.github.com/users/Centril/followers",
      "following_url": "https://api.github.com/users/Centril/following{/other_user}",
      "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Centril/subscriptions",
      "organizations_url": "https://api.github.com/users/Centril/orgs",
      "repos_url": "https://api.github.com/users/Centril/repos",
      "events_url": "https://api.github.com/users/Centril/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Centril/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 631673608,
        "node_id": "MDU6TGFiZWw2MzE2NzM2MDg=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/A-impl-trait",
        "name": "A-impl-trait",
        "color": "f7e101",
        "default": false
      },
      {
        "id": 89436934,
        "node_id": "MDU6TGFiZWw4OTQzNjkzNA==",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/B-RFC-approved",
        "name": "B-RFC-approved",
        "color": "d304cb",
        "default": false
      },
      {
        "id": 650846969,
        "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue",
        "name": "C-tracking-issue",
        "color": "f5f1fd",
        "default": false
      },
      {
        "id": 1472502130,
        "node_id": "MDU6TGFiZWwxNDcyNTAyMTMw",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/F-impl_trait_type_aliases",
        "name": "F-impl_trait_type_aliases",
        "color": "f9c0cc",
        "default": false
      },
      {
        "id": 211668019,
        "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang",
        "name": "T-lang",
        "color": "bfd4f2",
        "default": false
      },
      {
        "id": 1472563007,
        "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly",
        "name": "requires-nightly",
        "color": "76dcde",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-07-28T06:12:00Z",
    "updated_at": "2019-07-28T08:05:13Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "This is a tracking issue for the RFC \"Permit impl Trait in type aliases\" (rust-lang/rfcs#2515) under the feature gate `#![feature(impl_trait_type_aliases)]`.\r\n\r\n**Steps:**\r\n\r\n- [ ] Implement the RFC (cc @alexreg @varkor)\r\n- [ ] Adjust documentation ([see instructions on rustc-guide][doc-guide])\r\n- [ ] Stabilization PR ([see instructions on rustc-guide][stabilization-guide])\r\n\r\n[stabilization-guide]: https://rust-lang.github.io/rustc-guide/stabilization_guide.html#stabilization-pr\r\n[doc-guide]: https://rust-lang.github.io/rustc-guide/stabilization_guide.html#documentation-prs\r\n\r\n**Unresolved questions:**\r\n\r\n- [ ] Should the set of \"defining uses\" for an existential type in an impl be just items of the impl, or include nested items within the impl functions etc? ([see here for example](https://github.com/rust-lang/rust/pull/52650#discussion_r204893239))"
  },
  {
    "url": "https://api.github.com/repos/rust-lang/rust/issues/63059",
    "repository_url": "https://api.github.com/repos/rust-lang/rust",
    "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63059/labels{/name}",
    "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63059/comments",
    "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63059/events",
    "html_url": "https://github.com/rust-lang/rust/pull/63059",
    "id": 473694833,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzAxNzk3Mzk0",
    "number": 63059,
    "title": "Make `#![feature(bind_by_move_pattern_guards)]` sound without `#[feature(nll)]`",
    "user": {
      "login": "Centril",
      "id": 855702,
      "node_id": "MDQ6VXNlcjg1NTcwMg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/855702?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Centril",
      "html_url": "https://github.com/Centril",
      "followers_url": "https://api.github.com/users/Centril/followers",
      "following_url": "https://api.github.com/users/Centril/following{/other_user}",
      "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Centril/subscriptions",
      "organizations_url": "https://api.github.com/users/Centril/orgs",
      "repos_url": "https://api.github.com/users/Centril/repos",
      "events_url": "https://api.github.com/users/Centril/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Centril/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 583426710,
        "node_id": "MDU6TGFiZWw1ODM0MjY3MTA=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/S-waiting-on-review",
        "name": "S-waiting-on-review",
        "color": "d3dddd",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "matthewjasper",
      "id": 20113453,
      "node_id": "MDQ6VXNlcjIwMTEzNDUz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/20113453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matthewjasper",
      "html_url": "https://github.com/matthewjasper",
      "followers_url": "https://api.github.com/users/matthewjasper/followers",
      "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}",
      "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions",
      "organizations_url": "https://api.github.com/users/matthewjasper/orgs",
      "repos_url": "https://api.github.com/users/matthewjasper/repos",
      "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matthewjasper/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "matthewjasper",
        "id": 20113453,
        "node_id": "MDQ6VXNlcjIwMTEzNDUz",
        "avatar_url": "https://avatars1.githubusercontent.com/u/20113453?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/matthewjasper",
        "html_url": "https://github.com/matthewjasper",
        "followers_url": "https://api.github.com/users/matthewjasper/followers",
        "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}",
        "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions",
        "organizations_url": "https://api.github.com/users/matthewjasper/orgs",
        "repos_url": "https://api.github.com/users/matthewjasper/repos",
        "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}",
        "received_events_url": "https://api.github.com/users/matthewjasper/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-07-28T01:36:25Z",
    "updated_at": "2019-07-28T08:48:05Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/rust-lang/rust/pulls/63059",
      "html_url": "https://github.com/rust-lang/rust/pull/63059",
      "diff_url": "https://github.com/rust-lang/rust/pull/63059.diff",
      "patch_url": "https://github.com/rust-lang/rust/pull/63059.patch"
    },
    "body": "Implements https://github.com/rust-lang/rust/issues/15287#issuecomment-507054617.\r\n\r\nFixes https://github.com/rust-lang/rust/issues/31287\r\nFixes https://github.com/rust-lang/rust/issues/27282\r\n\r\nr? @matthewjasper "
  },
  {
    "url": "https://api.github.com/repos/rust-lang/rust/issues/63056",
    "repository_url": "https://api.github.com/repos/rust-lang/rust",
    "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63056/labels{/name}",
    "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63056/comments",
    "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63056/events",
    "html_url": "https://github.com/rust-lang/rust/pull/63056",
    "id": 473692534,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzAxNzk1ODM4",
    "number": 63056,
    "title": "Give built-in macros stable addresses in the standard library",
    "user": {
      "login": "petrochenkov",
      "id": 5751617,
      "node_id": "MDQ6VXNlcjU3NTE2MTc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5751617?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petrochenkov",
      "html_url": "https://github.com/petrochenkov",
      "followers_url": "https://api.github.com/users/petrochenkov/followers",
      "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}",
      "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions",
      "organizations_url": "https://api.github.com/users/petrochenkov/orgs",
      "repos_url": "https://api.github.com/users/petrochenkov/repos",
      "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petrochenkov/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 31942528,
        "node_id": "MDU6TGFiZWwzMTk0MjUyOA==",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/I-nominated",
        "name": "I-nominated",
        "color": "e10c02",
        "default": false
      },
      {
        "id": 583437099,
        "node_id": "MDU6TGFiZWw1ODM0MzcwOTk=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/S-waiting-on-team",
        "name": "S-waiting-on-team",
        "color": "d3dddd",
        "default": false
      },
      {
        "id": 211668062,
        "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs",
        "name": "T-libs",
        "color": "bfd4f2",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "alexcrichton",
      "id": 64996,
      "node_id": "MDQ6VXNlcjY0OTk2",
      "avatar_url": "https://avatars1.githubusercontent.com/u/64996?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexcrichton",
      "html_url": "https://github.com/alexcrichton",
      "followers_url": "https://api.github.com/users/alexcrichton/followers",
      "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions",
      "organizations_url": "https://api.github.com/users/alexcrichton/orgs",
      "repos_url": "https://api.github.com/users/alexcrichton/repos",
      "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexcrichton/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "alexcrichton",
        "id": 64996,
        "node_id": "MDQ6VXNlcjY0OTk2",
        "avatar_url": "https://avatars1.githubusercontent.com/u/64996?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alexcrichton",
        "html_url": "https://github.com/alexcrichton",
        "followers_url": "https://api.github.com/users/alexcrichton/followers",
        "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}",
        "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions",
        "organizations_url": "https://api.github.com/users/alexcrichton/orgs",
        "repos_url": "https://api.github.com/users/alexcrichton/repos",
        "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}",
        "received_events_url": "https://api.github.com/users/alexcrichton/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-07-28T00:54:53Z",
    "updated_at": "2019-07-28T01:03:11Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/rust-lang/rust/pulls/63056",
      "html_url": "https://github.com/rust-lang/rust/pull/63056",
      "diff_url": "https://github.com/rust-lang/rust/pull/63056.diff",
      "patch_url": "https://github.com/rust-lang/rust/pull/63056.patch"
    },
    "body": "Continuation of https://github.com/rust-lang/rust/pull/62086.\r\n\r\nDerive macros corresponding to traits from libcore are now available through the same paths as those traits:\r\n- `Clone` - `{core,std}::clone::Clone`\r\n- `PartialEq` - `{core,std}::cmp::PartialEq`\r\n- `Eq` - `{core,std}::cmp::Eq`\r\n- `PartialOrd` - `{core,std}::cmp::PartialOrd`\r\n- `Ord` - `{core,std}::cmp::Ord`\r\n- `Default` - `{core,std}::default::Default`\r\n- `Debug` - `{core,std}::fmt::Debug`\r\n- `Hash` - `{core,std}::hash::Hash`\r\n- `Copy` - `{core,std}::marker::Copy`\r\n\r\nFn-like built-in macros are now available through libcore and libstd's root module, by analogy with non-builtin macros defined by libcore and libstd:\r\n```rust\r\n{core,std}::{\r\n    __rust_unstable_column,\r\n    asm,\r\n    assert,\r\n    cfg,\r\n    column,\r\n    compile_error,\r\n    concat,\r\n    concat_idents,\r\n    env,\r\n    file,\r\n    format_args,\r\n    format_args_nl,\r\n    global_asm,\r\n    include,\r\n    include_bytes,\r\n    include_str,\r\n    line,\r\n    log_syntax,\r\n    module_path,\r\n    option_env,\r\n    stringify,\r\n    trace_macros,\r\n}\r\n```\r\n\r\nDerive macros without a corresponding trait in libcore or libstd are still available only through prelude (also see https://github.com/rust-lang/rust/pull/62507).\r\nAttribute macros also keep being available only through prelude, mostly because they don't have an existing practice to follow. An advice from the library team on their eventual placement would be appreciated.\r\n```rust\r\n    Decodable,\r\n    Encodable,\r\n    RustcDecodable,\r\n    RustcEncodable,\r\n    bench,\r\n    global_allocator,\r\n    test,\r\n    test_case,\r\n```\r\n\r\nr? @alexcrichton "
  },
  {
    "url": "https://api.github.com/repos/rust-lang/rust/issues/63055",
    "repository_url": "https://api.github.com/repos/rust-lang/rust",
    "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63055/labels{/name}",
    "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63055/comments",
    "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63055/events",
    "html_url": "https://github.com/rust-lang/rust/pull/63055",
    "id": 473688944,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzAxNzkzMzEz",
    "number": 63055,
    "title": "Various cleanups to save analysis",
    "user": {
      "login": "Mark-Simulacrum",
      "id": 5047365,
      "node_id": "MDQ6VXNlcjUwNDczNjU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5047365?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Mark-Simulacrum",
      "html_url": "https://github.com/Mark-Simulacrum",
      "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers",
      "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}",
      "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions",
      "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs",
      "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos",
      "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 583426710,
        "node_id": "MDU6TGFiZWw1ODM0MjY3MTA=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/S-waiting-on-review",
        "name": "S-waiting-on-review",
        "color": "d3dddd",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "Xanewok",
      "id": 3093213,
      "node_id": "MDQ6VXNlcjMwOTMyMTM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3093213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xanewok",
      "html_url": "https://github.com/Xanewok",
      "followers_url": "https://api.github.com/users/Xanewok/followers",
      "following_url": "https://api.github.com/users/Xanewok/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xanewok/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xanewok/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xanewok/subscriptions",
      "organizations_url": "https://api.github.com/users/Xanewok/orgs",
      "repos_url": "https://api.github.com/users/Xanewok/repos",
      "events_url": "https://api.github.com/users/Xanewok/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xanewok/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "Xanewok",
        "id": 3093213,
        "node_id": "MDQ6VXNlcjMwOTMyMTM=",
        "avatar_url": "https://avatars2.githubusercontent.com/u/3093213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Xanewok",
        "html_url": "https://github.com/Xanewok",
        "followers_url": "https://api.github.com/users/Xanewok/followers",
        "following_url": "https://api.github.com/users/Xanewok/following{/other_user}",
        "gists_url": "https://api.github.com/users/Xanewok/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Xanewok/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Xanewok/subscriptions",
        "organizations_url": "https://api.github.com/users/Xanewok/orgs",
        "repos_url": "https://api.github.com/users/Xanewok/repos",
        "events_url": "https://api.github.com/users/Xanewok/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Xanewok/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-07-27T23:53:38Z",
    "updated_at": "2019-07-27T23:53:54Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/rust-lang/rust/pulls/63055",
      "html_url": "https://github.com/rust-lang/rust/pull/63055",
      "diff_url": "https://github.com/rust-lang/rust/pull/63055.diff",
      "patch_url": "https://github.com/rust-lang/rust/pull/63055.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/rust-lang/rust/issues/63054",
    "repository_url": "https://api.github.com/repos/rust-lang/rust",
    "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63054/labels{/name}",
    "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63054/comments",
    "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63054/events",
    "html_url": "https://github.com/rust-lang/rust/issues/63054",
    "id": 473677817,
    "node_id": "MDU6SXNzdWU0NzM2Nzc4MTc=",
    "number": 63054,
    "title": "\"Variable is assigned to, but never used\" not thrown",
    "user": {
      "login": "BO41",
      "id": 29450609,
      "node_id": "MDQ6VXNlcjI5NDUwNjA5",
      "avatar_url": "https://avatars0.githubusercontent.com/u/29450609?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BO41",
      "html_url": "https://github.com/BO41",
      "followers_url": "https://api.github.com/users/BO41/followers",
      "following_url": "https://api.github.com/users/BO41/following{/other_user}",
      "gists_url": "https://api.github.com/users/BO41/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BO41/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BO41/subscriptions",
      "organizations_url": "https://api.github.com/users/BO41/orgs",
      "repos_url": "https://api.github.com/users/BO41/repos",
      "events_url": "https://api.github.com/users/BO41/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BO41/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 235137,
        "node_id": "MDU6TGFiZWwyMzUxMzc=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lint",
        "name": "A-lint",
        "color": "f7e101",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2019-07-27T21:08:25Z",
    "updated_at": "2019-07-28T13:06:06Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "```rust\r\nfn main() {\r\n    let mut error = 0;\r\n    for i in 0..3 {\r\n        error += i;\r\n    }\r\n}\r\n```\r\nThis ([playground](https://play.integer32.com/?version=stable&mode=debug&edition=2018&gist=58536d969b9dce47854128a31f47454b)) correctly throws the warning 'variable `error` is assigned to, but never used'.\r\n\r\nBut _this_ ([playground](https://play.integer32.com/?version=stable&mode=debug&edition=2018&gist=89507f1543cedcc9b452ad430eab5ca8)) **doesn't**\r\n```rust\r\nfn main() {\r\n    let mut error = 0;\r\n    for i in 0..3 {\r\n        error = error + i;\r\n    }\r\n}\r\n```\r\n\r\n[in 1.36, beta, nightly; 2015,2018]\r\n\r\n---\r\nI hope this isn't a duplicate.\r\nFound by @ColinPitrat in #63046 :wink: "
  },
  {
    "url": "https://api.github.com/repos/rust-lang/rust/issues/63053",
    "repository_url": "https://api.github.com/repos/rust-lang/rust",
    "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63053/labels{/name}",
    "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63053/comments",
    "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63053/events",
    "html_url": "https://github.com/rust-lang/rust/pull/63053",
    "id": 473676466,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzAxNzg0NTgw",
    "number": 63053,
    "title": "SystemTime docs: recommend Instant for elapsed time",
    "user": {
      "login": "kornelski",
      "id": 72159,
      "node_id": "MDQ6VXNlcjcyMTU5",
      "avatar_url": "https://avatars0.githubusercontent.com/u/72159?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kornelski",
      "html_url": "https://github.com/kornelski",
      "followers_url": "https://api.github.com/users/kornelski/followers",
      "following_url": "https://api.github.com/users/kornelski/following{/other_user}",
      "gists_url": "https://api.github.com/users/kornelski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kornelski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kornelski/subscriptions",
      "organizations_url": "https://api.github.com/users/kornelski/orgs",
      "repos_url": "https://api.github.com/users/kornelski/repos",
      "events_url": "https://api.github.com/users/kornelski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kornelski/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 583426710,
        "node_id": "MDU6TGFiZWw1ODM0MjY3MTA=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/S-waiting-on-review",
        "name": "S-waiting-on-review",
        "color": "d3dddd",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "shepmaster",
      "id": 174509,
      "node_id": "MDQ6VXNlcjE3NDUwOQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/174509?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shepmaster",
      "html_url": "https://github.com/shepmaster",
      "followers_url": "https://api.github.com/users/shepmaster/followers",
      "following_url": "https://api.github.com/users/shepmaster/following{/other_user}",
      "gists_url": "https://api.github.com/users/shepmaster/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shepmaster/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shepmaster/subscriptions",
      "organizations_url": "https://api.github.com/users/shepmaster/orgs",
      "repos_url": "https://api.github.com/users/shepmaster/repos",
      "events_url": "https://api.github.com/users/shepmaster/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shepmaster/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "shepmaster",
        "id": 174509,
        "node_id": "MDQ6VXNlcjE3NDUwOQ==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/174509?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/shepmaster",
        "html_url": "https://github.com/shepmaster",
        "followers_url": "https://api.github.com/users/shepmaster/followers",
        "following_url": "https://api.github.com/users/shepmaster/following{/other_user}",
        "gists_url": "https://api.github.com/users/shepmaster/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/shepmaster/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/shepmaster/subscriptions",
        "organizations_url": "https://api.github.com/users/shepmaster/orgs",
        "repos_url": "https://api.github.com/users/shepmaster/repos",
        "events_url": "https://api.github.com/users/shepmaster/events{/privacy}",
        "received_events_url": "https://api.github.com/users/shepmaster/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-07-27T20:50:51Z",
    "updated_at": "2019-07-28T10:09:32Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/rust-lang/rust/pulls/63053",
      "html_url": "https://github.com/rust-lang/rust/pull/63053",
      "diff_url": "https://github.com/rust-lang/rust/pull/63053.diff",
      "patch_url": "https://github.com/rust-lang/rust/pull/63053.patch"
    },
    "body": "Introduction to `SystemTime` mentions problems with non-monotonic clocks, but individual methods don't.\r\n\r\nFor benefit of users who jump directly to method's documentation, also recommend `Instant` in `elapsed` and `duration_since`.\r\n\r\n`SystemTime::elapsed()` docs overpromised the elapsed time. It's not elapsed time, but a difference between two clocks.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/rust-lang/rust/issues/63048",
    "repository_url": "https://api.github.com/repos/rust-lang/rust",
    "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63048/labels{/name}",
    "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63048/comments",
    "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63048/events",
    "html_url": "https://github.com/rust-lang/rust/pull/63048",
    "id": 473665602,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzAxNzc3NDIw",
    "number": 63048,
    "title": "Use doc comments from 'pub use' statements",
    "user": {
      "login": "Aaron1011",
      "id": 1408859,
      "node_id": "MDQ6VXNlcjE0MDg4NTk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1408859?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Aaron1011",
      "html_url": "https://github.com/Aaron1011",
      "followers_url": "https://api.github.com/users/Aaron1011/followers",
      "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}",
      "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions",
      "organizations_url": "https://api.github.com/users/Aaron1011/orgs",
      "repos_url": "https://api.github.com/users/Aaron1011/repos",
      "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Aaron1011/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 583426710,
        "node_id": "MDU6TGFiZWw1ODM0MjY3MTA=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/S-waiting-on-review",
        "name": "S-waiting-on-review",
        "color": "d3dddd",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "GuillaumeGomez",
      "id": 3050060,
      "node_id": "MDQ6VXNlcjMwNTAwNjA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3050060?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GuillaumeGomez",
      "html_url": "https://github.com/GuillaumeGomez",
      "followers_url": "https://api.github.com/users/GuillaumeGomez/followers",
      "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}",
      "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions",
      "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs",
      "repos_url": "https://api.github.com/users/GuillaumeGomez/repos",
      "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "GuillaumeGomez",
        "id": 3050060,
        "node_id": "MDQ6VXNlcjMwNTAwNjA=",
        "avatar_url": "https://avatars0.githubusercontent.com/u/3050060?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/GuillaumeGomez",
        "html_url": "https://github.com/GuillaumeGomez",
        "followers_url": "https://api.github.com/users/GuillaumeGomez/followers",
        "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}",
        "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions",
        "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs",
        "repos_url": "https://api.github.com/users/GuillaumeGomez/repos",
        "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}",
        "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-07-27T18:35:44Z",
    "updated_at": "2019-07-28T05:32:04Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/rust-lang/rust/pulls/63048",
      "html_url": "https://github.com/rust-lang/rust/pull/63048",
      "diff_url": "https://github.com/rust-lang/rust/pull/63048.diff",
      "patch_url": "https://github.com/rust-lang/rust/pull/63048.patch"
    },
    "body": "Split off from #62855\r\n\r\nCurrently, rustdoc ignores any doc comments found on 'pub use'\r\nstatements. As described in issue #58700, this makes it impossible to\r\nproperly document procedural macros. Any doc comments must be written on\r\nthe procedural macro definition, which must occur in a dedicated\r\nproc-macro crate. This means that any doc comments or doc tests cannot\r\nreference items defined in re-exporting crate, despite the fact that\r\nsuch items may be required to use the procedural macro.\r\n\r\nTo solve this issue, this commit allows doc comments to be written on\r\n'pub use' statements. For consistency, this applies to *all* 'pub use'\r\nstatements, not just those importing procedural macros.\r\n\r\nWhen inlining documentation, documentation on 'pub use' statements will\r\nbe prepended to the documentation of the inlined item. For example,\r\nthe following items:\r\n\r\n```rust\r\n\r\nmod other_mod {\r\n    /// Doc comment from definition\r\n    pub struct MyStruct;\r\n}\r\n\r\n/// Doc comment from 'pub use'\r\n///\r\npub use other_mod::MyStruct;\r\n```\r\n\r\nwill caues the documentation for the re-export of 'MyStruct' to be\r\nrendered as:\r\n\r\n```\r\nDoc comment from 'pub use'\r\nDoc comment from definition\r\n```\r\n\r\nNote the empty line in the 'pub use' doc comments - because doc comments\r\nare concatenated as-is, this ensure that the doc comments on the\r\ndefinition start on a new line."
  },
  {
    "url": "https://api.github.com/repos/rust-lang/rust/issues/63047",
    "repository_url": "https://api.github.com/repos/rust-lang/rust",
    "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63047/labels{/name}",
    "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63047/comments",
    "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63047/events",
    "html_url": "https://github.com/rust-lang/rust/issues/63047",
    "id": 473660295,
    "node_id": "MDU6SXNzdWU0NzM2NjAyOTU=",
    "number": 63047,
    "title": "-Zprofile and -Clink-dead-code enabled leads to the linking error on macOS",
    "user": {
      "login": "svartalf",
      "id": 1279564,
      "node_id": "MDQ6VXNlcjEyNzk1NjQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1279564?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svartalf",
      "html_url": "https://github.com/svartalf",
      "followers_url": "https://api.github.com/users/svartalf/followers",
      "following_url": "https://api.github.com/users/svartalf/following{/other_user}",
      "gists_url": "https://api.github.com/users/svartalf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svartalf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svartalf/subscriptions",
      "organizations_url": "https://api.github.com/users/svartalf/orgs",
      "repos_url": "https://api.github.com/users/svartalf/repos",
      "events_url": "https://api.github.com/users/svartalf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svartalf/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 37547,
        "node_id": "MDU6TGFiZWwzNzU0Nw==",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/A-linkage",
        "name": "A-linkage",
        "color": "f7e101",
        "default": false
      },
      {
        "id": 650731663,
        "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug",
        "name": "C-bug",
        "color": "f5f1fd",
        "default": false
      },
      {
        "id": 211668100,
        "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler",
        "name": "T-compiler",
        "color": "bfd4f2",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-07-27T17:33:38Z",
    "updated_at": "2019-07-27T18:38:42Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "I'm integrating [grcov](https://github.com/mozilla/grcov) and have macOS build failures with a linkage error while both `-Zprofile` and `-Clink-dead-code` flags enabled.\r\n\r\nConsider a cargo project with the following manifest:\r\n```toml\r\n[package]\r\nname = \"foo\"\r\nversion = \"0.1.0\"\r\nauthors = [\"me\"]\r\nedition = \"2018\"\r\n\r\n[dependencies]\r\ncore-foundation = \"0.6.4\"\r\n```\r\n\r\nand the `src/main.rs` file:\r\n```rust\r\nuse core_foundation::dictionary::CFMutableDictionary;\r\nuse core_foundation::number::CFNumber;\r\n\r\nfn main() {\r\n    let mut dict = CFMutableDictionary::new();\r\n    let key = CFNumber::from(1);\r\n    let value = CFNumber::from(2);\r\n    dict.add(&key, &value);\r\n\r\n    dbg!(dict.len());\r\n}\r\n```\r\n\r\nPlain `cargo run` successfully compiles and run the binary (no additional env vars set):\r\n\r\n```\r\n$ cargo run\r\n   Compiling foo v0.1.0 (/Users/apple/Desktop/foo)\r\n    Finished dev [unoptimized + debuginfo] target(s) in 0.41s\r\n     Running `target/debug/foo`\r\n[src/main.rs:10] dict.len() = 1\r\n```\r\n\r\nNow, as described in the `gcov` [readme](https://github.com/mozilla/grcov#grcov-with-travis) I add the necessary flags:\r\n\r\n```\r\n$ cargo clean\r\n$ CARGO_INCREMENTAL=0 RUSTFLAGS=\"-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Zno-landing-pads\" cargo run\r\n   Compiling libc v0.2.60\r\n   Compiling core-foundation-sys v0.6.2\r\n   Compiling core-foundation v0.6.4\r\n   Compiling foo v0.1.0 (/Users/apple/Desktop/foo)\r\nerror: linking with `cc` failed: exit code: 1\r\n  |\r\n  = note: \"cc\" \"-m64\" \"-L\" \"/Users/apple/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib\" \"/Users/apple/Desktop/foo/target/debug/deps/foo-43971b11e9fc60ca.foo.ayycu2cz-cgu.0.rcgu.o\" \"-o\" \"/Users/apple/Desktop/foo/target/debug/deps/foo-43971b11e9fc60ca\" \"/Users/apple/Desktop/foo/target/debug/deps/foo-43971b11e9fc60ca.8f4xgbrv4jev7ka.rcgu.o\" \"-nodefaultlibs\" \"-L\" \"/Users/apple/Desktop/foo/target/debug/deps\" \"-L\" \"/Users/apple/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib\" \"/Users/apple/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libtest-2f2c545f20952714.rlib\" \"/Users/apple/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libterm-d31c4cfba4ff2a7a.rlib\" \"/Users/apple/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libgetopts-2b60fe103d1e455e.rlib\" \"/Users/apple/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libunicode_width-7d268ed1d33eabb7.rlib\" \"/Users/apple/Desktop/foo/target/debug/deps/libcore_foundation-19ef10f3e7242abe.rlib\" \"/Users/apple/Desktop/foo/target/debug/deps/liblibc-5e68c041a34d0eed.rlib\" \"/Users/apple/Desktop/foo/target/debug/deps/libcore_foundation_sys-6d86f6aead90fb35.rlib\" \"/Users/apple/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libprofiler_builtins-f8dafa01db4dca39.rlib\" \"/Users/apple/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libstd-292d8bc6470467ba.rlib\" \"/Users/apple/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libpanic_unwind-912dbe632ba1cbae.rlib\" \"/Users/apple/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libbacktrace-ba5714b629684fb4.rlib\" \"/Users/apple/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libbacktrace_sys-eac4a78ff89c6e87.rlib\" \"/Users/apple/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/librustc_demangle-ef9b06bfe5cc2531.rlib\" \"/Users/apple/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libhashbrown-3b7d42ffe20649f3.rlib\" \"/Users/apple/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/librustc_std_workspace_alloc-4ad9bb4642dcbb0e.rlib\" \"/Users/apple/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libunwind-2705756291291215.rlib\" \"/Users/apple/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libcfg_if-4b3e65f59d0d2bb7.rlib\" \"/Users/apple/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liblibc-654bf98555d844ff.rlib\" \"/Users/apple/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc-46c32f2ea46d194a.rlib\" \"/Users/apple/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/librustc_std_workspace_core-ce3fd965850830d8.rlib\" \"/Users/apple/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libcore-46c797561289aff0.rlib\" \"/Users/apple/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libcompiler_builtins-974d425bd7750373.rlib\" \"-framework\" \"CoreFoundation\" \"-lSystem\" \"-lresolv\" \"-lc\" \"-lm\"\r\n  = note: Undefined symbols for architecture x86_64:\r\n            \"_CFMutableAttributedStringGetTypeID\", referenced from:\r\n                _$LT$core_foundation..attributed_string..CFMutableAttributedString$u20$as$u20$core_foundation..base..TCFType$GT$::type_id::h9cd95ae9d283ffee in libcore_foundation-19ef10f3e7242abe.rlib(core_foundation-19ef10f3e7242abe.core_foundation.bhl000vu-cgu.0.rcgu.o)\r\n          ld: symbol(s) not found for architecture x86_64\r\n          clang: error: linker command failed with exit code 1 (use -v to see invocation)\r\n```\r\n\r\nWith a `-Clink-dead-code` flag removed from `RUSTFLAGS` build successfully compiles: \r\n\r\n```\r\n$ cargo clean\r\n$ CARGO_INCREMENTAL=0 RUSTFLAGS=\"-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Coverflow-checks=off -Zno-landing-pads\" cargo run\r\n   Compiling libc v0.2.60\r\n   Compiling core-foundation-sys v0.6.2\r\n   Compiling core-foundation v0.6.4\r\n   Compiling foo v0.1.0 (/Users/apple/Desktop/foo)\r\n    Finished dev [unoptimized + debuginfo] target(s) in 3.76s\r\n     Running `target/debug/foo`\r\n[src/main.rs:10] dict.len() = 1\r\n```\r\n\r\nThe same behavior applies to `cargo test` command.\r\n\r\n## Meta\r\n\r\n```\r\n$ rustc --version --verbose\r\nrustc 1.38.0-nightly (a7f28678b 2019-07-23)\r\nbinary: rustc\r\ncommit-hash: a7f28678bbf4e16893bb6a718e427504167a9494\r\ncommit-date: 2019-07-23\r\nhost: x86_64-apple-darwin\r\nrelease: 1.38.0-nightly\r\nLLVM version: 9.0\r\n\r\n$ xcrun --show-sdk-version\r\n10.14.1\r\n\r\n$ sw_vers\r\nProductName:\tMac OS X\r\nProductVersion:\t10.13.6\r\nBuildVersion:\t17G65\r\n```"
  },
  {
    "url": "https://api.github.com/repos/rust-lang/rust/issues/63045",
    "repository_url": "https://api.github.com/repos/rust-lang/rust",
    "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63045/labels{/name}",
    "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63045/comments",
    "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63045/events",
    "html_url": "https://github.com/rust-lang/rust/pull/63045",
    "id": 473655205,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzAxNzcwNTE2",
    "number": 63045,
    "title": "Change the placement of two functions.",
    "user": {
      "login": "Rosto75",
      "id": 11074159,
      "node_id": "MDQ6VXNlcjExMDc0MTU5",
      "avatar_url": "https://avatars2.githubusercontent.com/u/11074159?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Rosto75",
      "html_url": "https://github.com/Rosto75",
      "followers_url": "https://api.github.com/users/Rosto75/followers",
      "following_url": "https://api.github.com/users/Rosto75/following{/other_user}",
      "gists_url": "https://api.github.com/users/Rosto75/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Rosto75/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Rosto75/subscriptions",
      "organizations_url": "https://api.github.com/users/Rosto75/orgs",
      "repos_url": "https://api.github.com/users/Rosto75/repos",
      "events_url": "https://api.github.com/users/Rosto75/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Rosto75/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 583426710,
        "node_id": "MDU6TGFiZWw1ODM0MjY3MTA=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/S-waiting-on-review",
        "name": "S-waiting-on-review",
        "color": "d3dddd",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "aidanhs",
      "id": 1050652,
      "node_id": "MDQ6VXNlcjEwNTA2NTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1050652?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aidanhs",
      "html_url": "https://github.com/aidanhs",
      "followers_url": "https://api.github.com/users/aidanhs/followers",
      "following_url": "https://api.github.com/users/aidanhs/following{/other_user}",
      "gists_url": "https://api.github.com/users/aidanhs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aidanhs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aidanhs/subscriptions",
      "organizations_url": "https://api.github.com/users/aidanhs/orgs",
      "repos_url": "https://api.github.com/users/aidanhs/repos",
      "events_url": "https://api.github.com/users/aidanhs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aidanhs/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "aidanhs",
        "id": 1050652,
        "node_id": "MDQ6VXNlcjEwNTA2NTI=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/1050652?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aidanhs",
        "html_url": "https://github.com/aidanhs",
        "followers_url": "https://api.github.com/users/aidanhs/followers",
        "following_url": "https://api.github.com/users/aidanhs/following{/other_user}",
        "gists_url": "https://api.github.com/users/aidanhs/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/aidanhs/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/aidanhs/subscriptions",
        "organizations_url": "https://api.github.com/users/aidanhs/orgs",
        "repos_url": "https://api.github.com/users/aidanhs/repos",
        "events_url": "https://api.github.com/users/aidanhs/events{/privacy}",
        "received_events_url": "https://api.github.com/users/aidanhs/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-07-27T16:35:37Z",
    "updated_at": "2019-07-27T20:16:00Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/rust-lang/rust/pulls/63045",
      "html_url": "https://github.com/rust-lang/rust/pull/63045",
      "diff_url": "https://github.com/rust-lang/rust/pull/63045.diff",
      "patch_url": "https://github.com/rust-lang/rust/pull/63045.patch"
    },
    "body": "Right now, the order is as follows:\r\n`pop_front()`\r\n`push_front()`\r\n`push_back()`\r\n`pop_back()`\r\n\r\n`swap_remove_back()`\r\n`swap_remove_front()`\r\n\r\nI believe it would be more natural, and easier to follow, if we place `pop_back()` right after the `pop_front()`, and `swap_remove_back()` after the `swap_remove_front()` like this:\r\n`pop_front()`\r\n`pop_back()`\r\n`push_front()`\r\n`push_back()`\r\n\r\n`swap_remove_front()`\r\n`swap_remove_back()`\r\n\r\nThe rest of the documentation (at least in this module) adheres to the same logic, where the 'front' function always precedes its 'back' equivalent."
  },
  {
    "url": "https://api.github.com/repos/rust-lang/rust/issues/63044",
    "repository_url": "https://api.github.com/repos/rust-lang/rust",
    "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63044/labels{/name}",
    "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63044/comments",
    "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63044/events",
    "html_url": "https://github.com/rust-lang/rust/issues/63044",
    "id": 473650308,
    "node_id": "MDU6SXNzdWU0NzM2NTAzMDg=",
    "number": 63044,
    "title": "Formatter not capable of generating underscores in long number literals",
    "user": {
      "login": "therealprof",
      "id": 3321888,
      "node_id": "MDQ6VXNlcjMzMjE4ODg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3321888?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/therealprof",
      "html_url": "https://github.com/therealprof",
      "followers_url": "https://api.github.com/users/therealprof/followers",
      "following_url": "https://api.github.com/users/therealprof/following{/other_user}",
      "gists_url": "https://api.github.com/users/therealprof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/therealprof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/therealprof/subscriptions",
      "organizations_url": "https://api.github.com/users/therealprof/orgs",
      "repos_url": "https://api.github.com/users/therealprof/repos",
      "events_url": "https://api.github.com/users/therealprof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/therealprof/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 630652267,
        "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request",
        "name": "C-feature-request",
        "color": "f5f1fd",
        "default": false
      },
      {
        "id": 211668062,
        "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs",
        "name": "T-libs",
        "color": "bfd4f2",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-07-27T15:42:47Z",
    "updated_at": "2019-07-27T15:44:31Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "When using the `quote` crate or otherwise generating Rust code (like we do in `svd2rust`) it would be immensely helpful if there was a way to `format!` long number literals in a way that `clippy` wouldn't throw an https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal back at us when linting the code but isn't."
  },
  {
    "url": "https://api.github.com/repos/rust-lang/rust/issues/63042",
    "repository_url": "https://api.github.com/repos/rust-lang/rust",
    "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63042/labels{/name}",
    "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63042/comments",
    "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63042/events",
    "html_url": "https://github.com/rust-lang/rust/issues/63042",
    "id": 473640249,
    "node_id": "MDU6SXNzdWU0NzM2NDAyNDk=",
    "number": 63042,
    "title": "[docs] auto impl trait should be sorted",
    "user": {
      "login": "GuillaumeGomez",
      "id": 3050060,
      "node_id": "MDQ6VXNlcjMwNTAwNjA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3050060?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GuillaumeGomez",
      "html_url": "https://github.com/GuillaumeGomez",
      "followers_url": "https://api.github.com/users/GuillaumeGomez/followers",
      "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}",
      "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions",
      "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs",
      "repos_url": "https://api.github.com/users/GuillaumeGomez/repos",
      "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 203738,
        "node_id": "MDU6TGFiZWwyMDM3Mzg=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc",
        "name": "T-rustdoc",
        "color": "bfd4f2",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "GuillaumeGomez",
      "id": 3050060,
      "node_id": "MDQ6VXNlcjMwNTAwNjA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3050060?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GuillaumeGomez",
      "html_url": "https://github.com/GuillaumeGomez",
      "followers_url": "https://api.github.com/users/GuillaumeGomez/followers",
      "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}",
      "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions",
      "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs",
      "repos_url": "https://api.github.com/users/GuillaumeGomez/repos",
      "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "GuillaumeGomez",
        "id": 3050060,
        "node_id": "MDQ6VXNlcjMwNTAwNjA=",
        "avatar_url": "https://avatars0.githubusercontent.com/u/3050060?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/GuillaumeGomez",
        "html_url": "https://github.com/GuillaumeGomez",
        "followers_url": "https://api.github.com/users/GuillaumeGomez/followers",
        "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}",
        "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions",
        "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs",
        "repos_url": "https://api.github.com/users/GuillaumeGomez/repos",
        "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}",
        "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-07-27T13:52:10Z",
    "updated_at": "2019-07-27T13:52:10Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "That'd make tests more accurate."
  },
  {
    "url": "https://api.github.com/repos/rust-lang/rust/issues/63040",
    "repository_url": "https://api.github.com/repos/rust-lang/rust",
    "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63040/labels{/name}",
    "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63040/comments",
    "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63040/events",
    "html_url": "https://github.com/rust-lang/rust/issues/63040",
    "id": 473634861,
    "node_id": "MDU6SXNzdWU0NzM2MzQ4NjE=",
    "number": 63040,
    "title": "Invalid suggestion when returning struct with lifetime param missing ",
    "user": {
      "login": "bjorn3",
      "id": 17426603,
      "node_id": "MDQ6VXNlcjE3NDI2NjAz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/17426603?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bjorn3",
      "html_url": "https://github.com/bjorn3",
      "followers_url": "https://api.github.com/users/bjorn3/followers",
      "following_url": "https://api.github.com/users/bjorn3/following{/other_user}",
      "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions",
      "organizations_url": "https://api.github.com/users/bjorn3/orgs",
      "repos_url": "https://api.github.com/users/bjorn3/repos",
      "events_url": "https://api.github.com/users/bjorn3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bjorn3/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 235791,
        "node_id": "MDU6TGFiZWwyMzU3OTE=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics",
        "name": "A-diagnostics",
        "color": "f7e101",
        "default": false
      },
      {
        "id": 1183099971,
        "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics",
        "name": "A-suggestion-diagnostics",
        "color": "f7e101",
        "default": false
      },
      {
        "id": 650731663,
        "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug",
        "name": "C-bug",
        "color": "f5f1fd",
        "default": false
      },
      {
        "id": 211668100,
        "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler",
        "name": "T-compiler",
        "color": "bfd4f2",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-07-27T12:44:31Z",
    "updated_at": "2019-07-27T12:49:34Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "```rust\r\nstruct Context<'a> {\r\n    a: &'a (),\r\n}\r\n\r\nfn context() -> Context {\r\n    loop {}\r\n}\r\n```\r\n\r\n([Playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=8e98596fa4a1d144fa7c8061697cbcb1))\r\n\r\nErrors:\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror[E0106]: missing lifetime specifier\r\n --> src/lib.rs:5:17\r\n  |\r\n5 | fn context() -> Context {\r\n  |                 ^^^^^^^ help: consider giving it a 'static lifetime: `Context + 'static`\r\n  |\r\n  = help: this function's return type contains a borrowed value, but there is no value for it to be borrowed from\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0106`.\r\nerror: Could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n\r\n```"
  },
  {
    "url": "https://api.github.com/repos/rust-lang/rust/issues/63037",
    "repository_url": "https://api.github.com/repos/rust-lang/rust",
    "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63037/labels{/name}",
    "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63037/comments",
    "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63037/events",
    "html_url": "https://github.com/rust-lang/rust/issues/63037",
    "id": 473615961,
    "node_id": "MDU6SXNzdWU0NzM2MTU5NjE=",
    "number": 63037,
    "title": "rustdoc shows anonymous elided lifetimes in async fn signature",
    "user": {
      "login": "basdebue",
      "id": 43719537,
      "node_id": "MDQ6VXNlcjQzNzE5NTM3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/43719537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/basdebue",
      "html_url": "https://github.com/basdebue",
      "followers_url": "https://api.github.com/users/basdebue/followers",
      "following_url": "https://api.github.com/users/basdebue/following{/other_user}",
      "gists_url": "https://api.github.com/users/basdebue/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/basdebue/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/basdebue/subscriptions",
      "organizations_url": "https://api.github.com/users/basdebue/orgs",
      "repos_url": "https://api.github.com/users/basdebue/repos",
      "events_url": "https://api.github.com/users/basdebue/events{/privacy}",
      "received_events_url": "https://api.github.com/users/basdebue/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 650731663,
        "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug",
        "name": "C-bug",
        "color": "f5f1fd",
        "default": false
      },
      {
        "id": 203738,
        "node_id": "MDU6TGFiZWwyMDM3Mzg=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc",
        "name": "T-rustdoc",
        "color": "bfd4f2",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "GuillaumeGomez",
      "id": 3050060,
      "node_id": "MDQ6VXNlcjMwNTAwNjA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3050060?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GuillaumeGomez",
      "html_url": "https://github.com/GuillaumeGomez",
      "followers_url": "https://api.github.com/users/GuillaumeGomez/followers",
      "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}",
      "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions",
      "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs",
      "repos_url": "https://api.github.com/users/GuillaumeGomez/repos",
      "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "GuillaumeGomez",
        "id": 3050060,
        "node_id": "MDQ6VXNlcjMwNTAwNjA=",
        "avatar_url": "https://avatars0.githubusercontent.com/u/3050060?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/GuillaumeGomez",
        "html_url": "https://github.com/GuillaumeGomez",
        "followers_url": "https://api.github.com/users/GuillaumeGomez/followers",
        "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}",
        "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions",
        "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs",
        "repos_url": "https://api.github.com/users/GuillaumeGomez/repos",
        "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}",
        "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-07-27T08:36:27Z",
    "updated_at": "2019-07-27T13:51:25Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "When run on an `async fn` with elided lifetimes, `rustdoc` generates documentation containing the anonymous elided lifetimes in the function's signature. Running `rustdoc` on the blocking variant of the same function produces a correct signature.\r\n\r\nYou can reproduce this issue by generating docs for the following code:\r\n```rust\r\n#![feature(async_await)]\r\n\r\npub async fn asynchronous(foo: &str, bar: &str) -> String {\r\n    format!(\"{}{}\", foo, bar)\r\n}\r\n\r\npub fn blocking(foo: &str, bar: &str) -> String {\r\n    format!(\"{}{}\", foo, bar)\r\n}\r\n```\r\n\r\nThe asynchronous function's docs show the elided lifetimes, the blocking function's docs don't:\r\n\r\n```rust\r\npub async fn asynchronous<'_, '_>(foo: &'_ str, bar: &'_ str) -> String\r\n```\r\n\r\n```rust\r\npub fn blocking(foo: &str, bar: &str) -> String\r\n```\r\n\r\n## Meta\r\n\r\n`rustdoc --version --verbose`:\r\n```\r\nrustdoc 1.38.0-nightly (c43753f91 2019-07-26)\r\nbinary: rustdoc\r\ncommit-hash: c43753f910aae000f8bcb0a502407ea332afc74b\r\ncommit-date: 2019-07-26\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.38.0-nightly\r\nLLVM version: 9.0\r\n```"
  },
  {
    "url": "https://api.github.com/repos/rust-lang/rust/issues/63035",
    "repository_url": "https://api.github.com/repos/rust-lang/rust",
    "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63035/labels{/name}",
    "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63035/comments",
    "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63035/events",
    "html_url": "https://github.com/rust-lang/rust/pull/63035",
    "id": 473598665,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzAxNzMzNjIy",
    "number": 63035,
    "title": "Use MaybeUninit to produce more correct layouts",
    "user": {
      "login": "tmandry",
      "id": 2280544,
      "node_id": "MDQ6VXNlcjIyODA1NDQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2280544?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tmandry",
      "html_url": "https://github.com/tmandry",
      "followers_url": "https://api.github.com/users/tmandry/followers",
      "following_url": "https://api.github.com/users/tmandry/following{/other_user}",
      "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions",
      "organizations_url": "https://api.github.com/users/tmandry/orgs",
      "repos_url": "https://api.github.com/users/tmandry/repos",
      "events_url": "https://api.github.com/users/tmandry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tmandry/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 583426710,
        "node_id": "MDU6TGFiZWw1ODM0MjY3MTA=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/S-waiting-on-review",
        "name": "S-waiting-on-review",
        "color": "d3dddd",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "eddyb",
      "id": 77424,
      "node_id": "MDQ6VXNlcjc3NDI0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/77424?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eddyb",
      "html_url": "https://github.com/eddyb",
      "followers_url": "https://api.github.com/users/eddyb/followers",
      "following_url": "https://api.github.com/users/eddyb/following{/other_user}",
      "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions",
      "organizations_url": "https://api.github.com/users/eddyb/orgs",
      "repos_url": "https://api.github.com/users/eddyb/repos",
      "events_url": "https://api.github.com/users/eddyb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eddyb/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "eddyb",
        "id": 77424,
        "node_id": "MDQ6VXNlcjc3NDI0",
        "avatar_url": "https://avatars2.githubusercontent.com/u/77424?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/eddyb",
        "html_url": "https://github.com/eddyb",
        "followers_url": "https://api.github.com/users/eddyb/followers",
        "following_url": "https://api.github.com/users/eddyb/following{/other_user}",
        "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions",
        "organizations_url": "https://api.github.com/users/eddyb/orgs",
        "repos_url": "https://api.github.com/users/eddyb/repos",
        "events_url": "https://api.github.com/users/eddyb/events{/privacy}",
        "received_events_url": "https://api.github.com/users/eddyb/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-07-27T04:51:33Z",
    "updated_at": "2019-07-28T13:07:15Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/rust-lang/rust/pulls/63035",
      "html_url": "https://github.com/rust-lang/rust/pull/63035",
      "diff_url": "https://github.com/rust-lang/rust/pull/63035.diff",
      "patch_url": "https://github.com/rust-lang/rust/pull/63035.patch"
    },
    "body": "This fixes a latent instance of #59972 where we would promote an uninhabited field to the generator prefix, causing the entire generator to be uninhabited.\r\n\r\nr? @eddyb \r\ncc @cramertj @Zoxc "
  },
  {
    "url": "https://api.github.com/repos/rust-lang/rust/issues/63034",
    "repository_url": "https://api.github.com/repos/rust-lang/rust",
    "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63034/labels{/name}",
    "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63034/comments",
    "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63034/events",
    "html_url": "https://github.com/rust-lang/rust/pull/63034",
    "id": 473595898,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzAxNzMxNzE3",
    "number": 63034,
    "title": "[WIP] Fix generator size regressions due to optimization",
    "user": {
      "login": "tmandry",
      "id": 2280544,
      "node_id": "MDQ6VXNlcjIyODA1NDQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2280544?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tmandry",
      "html_url": "https://github.com/tmandry",
      "followers_url": "https://api.github.com/users/tmandry/followers",
      "following_url": "https://api.github.com/users/tmandry/following{/other_user}",
      "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions",
      "organizations_url": "https://api.github.com/users/tmandry/orgs",
      "repos_url": "https://api.github.com/users/tmandry/repos",
      "events_url": "https://api.github.com/users/tmandry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tmandry/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 583426710,
        "node_id": "MDU6TGFiZWw1ODM0MjY3MTA=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/S-waiting-on-review",
        "name": "S-waiting-on-review",
        "color": "d3dddd",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "cramertj",
      "id": 5963049,
      "node_id": "MDQ6VXNlcjU5NjMwNDk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5963049?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cramertj",
      "html_url": "https://github.com/cramertj",
      "followers_url": "https://api.github.com/users/cramertj/followers",
      "following_url": "https://api.github.com/users/cramertj/following{/other_user}",
      "gists_url": "https://api.github.com/users/cramertj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cramertj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cramertj/subscriptions",
      "organizations_url": "https://api.github.com/users/cramertj/orgs",
      "repos_url": "https://api.github.com/users/cramertj/repos",
      "events_url": "https://api.github.com/users/cramertj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cramertj/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "cramertj",
        "id": 5963049,
        "node_id": "MDQ6VXNlcjU5NjMwNDk=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/5963049?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cramertj",
        "html_url": "https://github.com/cramertj",
        "followers_url": "https://api.github.com/users/cramertj/followers",
        "following_url": "https://api.github.com/users/cramertj/following{/other_user}",
        "gists_url": "https://api.github.com/users/cramertj/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cramertj/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cramertj/subscriptions",
        "organizations_url": "https://api.github.com/users/cramertj/orgs",
        "repos_url": "https://api.github.com/users/cramertj/repos",
        "events_url": "https://api.github.com/users/cramertj/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cramertj/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-07-27T04:06:02Z",
    "updated_at": "2019-07-27T05:13:31Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/rust-lang/rust/pulls/63034",
      "html_url": "https://github.com/rust-lang/rust/pull/63034",
      "diff_url": "https://github.com/rust-lang/rust/pull/63034.diff",
      "patch_url": "https://github.com/rust-lang/rust/pull/63034.patch"
    },
    "body": "I tested the generator optimizations in #60187 and #61922 on the Fuchsia\r\nbuild, and noticed that some small generators (about 8% of the async fns\r\nin our build) increased in size slightly.\r\n\r\nThis is because in #60187 we split the fields into two groups, a\r\n\"prefix\" non-overlap region and an overlap region, and lay them out\r\nseparately. This can introduce unnecessary padding bytes between the two\r\ngroups.\r\n\r\nIn every single case in the Fuchsia build, it was due to there being\r\nonly a single variant being used in the overlap region. This means that\r\nwe aren't doing any overlapping, period. So it's better to combine the\r\ntwo regions into one and lay out all the fields at once, which is what\r\nthis change does.\r\n\r\nr? @cramertj \r\ncc @eddyb @Zoxc "
  },
  {
    "url": "https://api.github.com/repos/rust-lang/rust/issues/63033",
    "repository_url": "https://api.github.com/repos/rust-lang/rust",
    "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63033/labels{/name}",
    "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63033/comments",
    "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63033/events",
    "html_url": "https://github.com/rust-lang/rust/issues/63033",
    "id": 473595116,
    "node_id": "MDU6SXNzdWU0NzM1OTUxMTY=",
    "number": 63033,
    "title": "Async fn does not compile if lifetime does not appear in bounds (sometimes)",
    "user": {
      "login": "dtolnay",
      "id": 1940490,
      "node_id": "MDQ6VXNlcjE5NDA0OTA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1940490?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dtolnay",
      "html_url": "https://github.com/dtolnay",
      "followers_url": "https://api.github.com/users/dtolnay/followers",
      "following_url": "https://api.github.com/users/dtolnay/following{/other_user}",
      "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions",
      "organizations_url": "https://api.github.com/users/dtolnay/orgs",
      "repos_url": "https://api.github.com/users/dtolnay/repos",
      "events_url": "https://api.github.com/users/dtolnay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dtolnay/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1049510487,
        "node_id": "MDU6TGFiZWwxMDQ5NTEwNDg3",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/A-async-await",
        "name": "A-async-await",
        "color": "f7e101",
        "default": false
      },
      {
        "id": 650731663,
        "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug",
        "name": "C-bug",
        "color": "f5f1fd",
        "default": false
      },
      {
        "id": 1472519884,
        "node_id": "MDU6TGFiZWwxNDcyNTE5ODg0",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/F-async_await",
        "name": "F-async_await",
        "color": "f9c0cc",
        "default": false
      },
      {
        "id": 211668100,
        "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler",
        "name": "T-compiler",
        "color": "bfd4f2",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-07-27T03:54:09Z",
    "updated_at": "2019-07-28T07:07:26Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "```rust\r\n#![feature(async_await)]\r\n\r\nuse std::marker::PhantomData;\r\n\r\ntrait Trait {}\r\n\r\nasync fn f<'a>(reference: &(), marker: PhantomData<dyn Trait>) {}\r\n```\r\n\r\nThis fails with:\r\n\r\n```console\r\nerror[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\r\n --> src/main.rs:7:64\r\n  |\r\n7 | async fn f<'a>(reference: &(), marker: PhantomData<dyn Trait>) {}\r\n  |                                                                ^\r\n  |\r\nnote: hidden type `impl std::future::Future` captures the scope of call-site for function at 7:64\r\n --> src/main.rs:7:64\r\n  |\r\n7 | async fn f<'a>(reference: &(), marker: PhantomData<dyn Trait>) {}\r\n  |                                                                ^^\r\n```\r\n\r\nI believe this should compile because:\r\n\r\n1. The non-async function with the same signature does compile;\r\n\r\n    ```rust\r\n    fn f<'a>(reference: &(), marker: PhantomData<dyn Trait>) {}\r\n    ```\r\n\r\n2. Seemingly insignificant tweaks, like adding a wrapper struct, make it compile.\r\n\r\n    ```rust\r\n    struct Wrapper(PhantomData<dyn Trait>);\r\n    async fn f<'a>(reference: &(), marker: Wrapper) {}\r\n    ```\r\n\r\nMentioning @cramertj who fixed a similar error message in #59001.\r\nMentioning @nikomatsakis who touched this error message in #49041 and #61775.\r\n\r\n*rustc 1.38.0-nightly (c43753f91 2019-07-26)*"
  },
  {
    "url": "https://api.github.com/repos/rust-lang/rust/issues/63032",
    "repository_url": "https://api.github.com/repos/rust-lang/rust",
    "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63032/labels{/name}",
    "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63032/comments",
    "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63032/events",
    "html_url": "https://github.com/rust-lang/rust/issues/63032",
    "id": 473591750,
    "node_id": "MDU6SXNzdWU0NzM1OTE3NTA=",
    "number": 63032,
    "title": "Lifetime is unnecessarily captured in nested functions returning impl trait via async",
    "user": {
      "login": "sfackler",
      "id": 1455697,
      "node_id": "MDQ6VXNlcjE0NTU2OTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1455697?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sfackler",
      "html_url": "https://github.com/sfackler",
      "followers_url": "https://api.github.com/users/sfackler/followers",
      "following_url": "https://api.github.com/users/sfackler/following{/other_user}",
      "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions",
      "organizations_url": "https://api.github.com/users/sfackler/orgs",
      "repos_url": "https://api.github.com/users/sfackler/repos",
      "events_url": "https://api.github.com/users/sfackler/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sfackler/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1049510487,
        "node_id": "MDU6TGFiZWwxMDQ5NTEwNDg3",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/A-async-await",
        "name": "A-async-await",
        "color": "f7e101",
        "default": false
      },
      {
        "id": 1472519884,
        "node_id": "MDU6TGFiZWwxNDcyNTE5ODg0",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/F-async_await",
        "name": "F-async_await",
        "color": "f9c0cc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-07-27T03:05:37Z",
    "updated_at": "2019-07-28T07:07:35Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "When trying to create some futures that do a bit of work up-front to avoid borrowing some inputs, I ran into this strange issue where it seems like an input lifetime is being unnecessarily captured by the returned impl trait even though the value isn't:\r\n\r\n```rust\r\n#![feature(async_await)]\r\nuse std::future::Future;\r\n\r\nfn query<'a, I>(params: I) -> impl Future<Output = Vec<i32>> + 'static\r\nwhere\r\n    I: IntoIterator<Item = &'a i32>,\r\n{\r\n    let start = start(params);\r\n    \r\n    async {\r\n        start.await\r\n    }\r\n}\r\n\r\nfn start<'a, I>(params: I) -> impl Future<Output = Vec<i32>> + 'static\r\nwhere\r\n    I: IntoIterator<Item = &'a i32>,\r\n{\r\n    let buf = encode(params);\r\n    \r\n    async {\r\n        buf\r\n    }\r\n}\r\n\r\nfn encode<'a, I>(params: I) -> Vec<i32>\r\nwhere\r\n    I: IntoIterator<Item = &'a i32>,\r\n{\r\n    params.into_iter().cloned().collect()\r\n}\r\n```\r\n\r\n```\r\nerror[E0310]: the parameter type `I` may not live long enough\r\n --> src/lib.rs:4:31\r\n  |\r\n4 | fn query<'a, I>(params: I) -> impl Future<Output = Vec<i32>> + 'static\r\n  |              -                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  |              |\r\n  |              help: consider adding an explicit lifetime bound `I: 'static`...\r\n  |\r\nnote: ...so that the type `impl std::future::Future` will meet its required lifetime bounds\r\n --> src/lib.rs:4:31\r\n  |\r\n4 | fn query<'a, I>(params: I) -> impl Future<Output = Vec<i32>> + 'static\r\n  |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0310`.\r\n```\r\n\r\nIt also seems really weird that this only happens with 2 layers of \"nesting\" - `start` compiles just fine, but `query` doesn't even though it's pretty much just a pass-through."
  },
  {
    "url": "https://api.github.com/repos/rust-lang/rust/issues/63031",
    "repository_url": "https://api.github.com/repos/rust-lang/rust",
    "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63031/labels{/name}",
    "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63031/comments",
    "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63031/events",
    "html_url": "https://github.com/rust-lang/rust/issues/63031",
    "id": 473584974,
    "node_id": "MDU6SXNzdWU0NzM1ODQ5NzQ=",
    "number": 63031,
    "title": "ICE typechecking closure object with bound lifetime",
    "user": {
      "login": "alexreg",
      "id": 67036,
      "node_id": "MDQ6VXNlcjY3MDM2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/67036?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexreg",
      "html_url": "https://github.com/alexreg",
      "followers_url": "https://api.github.com/users/alexreg/followers",
      "following_url": "https://api.github.com/users/alexreg/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexreg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexreg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexreg/subscriptions",
      "organizations_url": "https://api.github.com/users/alexreg/orgs",
      "repos_url": "https://api.github.com/users/alexreg/repos",
      "events_url": "https://api.github.com/users/alexreg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexreg/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 122406831,
        "node_id": "MDU6TGFiZWwxMjI0MDY4MzE=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/A-closures",
        "name": "A-closures",
        "color": "f7e101",
        "default": false
      },
      {
        "id": 234956,
        "node_id": "MDU6TGFiZWwyMzQ5NTY=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen",
        "name": "A-codegen",
        "color": "f7e101",
        "default": false
      },
      {
        "id": 9618520,
        "node_id": "MDU6TGFiZWw5NjE4NTIw",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE",
        "name": "I-ICE",
        "color": "e10c02",
        "default": false
      },
      {
        "id": 31942528,
        "node_id": "MDU6TGFiZWwzMTk0MjUyOA==",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/I-nominated",
        "name": "I-nominated",
        "color": "e10c02",
        "default": false
      },
      {
        "id": 211668100,
        "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=",
        "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler",
        "name": "T-compiler",
        "color": "bfd4f2",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-07-27T01:36:05Z",
    "updated_at": "2019-07-27T02:24:44Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "I don't think this was previously submitted as an issue, though it was mentioned on the [Rust Internals forum](https://users.rust-lang.org/t/generic-closure-arguments-and-hrtbs/13185/5).\r\n\r\n```rust\r\ntrait Lf<'a> { type Type; }\r\n\r\nstruct F32;\r\nimpl<'a> Lf<'a> for F32 { type Type = f32; }\r\n\r\nstruct RefI32;\r\nimpl<'a> Lf<'a> for RefI32 { type Type = &'a i32; }\r\n\r\nfn add_closure<T: for<'b> Lf<'b> + 'static>(v: &mut Vec<Box<for<'a> FnMut(<T as Lf<'a>>::Type)>>) {\r\n    v.push(Box::new(move |_| {\r\n    }));\r\n}\r\n\r\nfn main() {\r\n    // bug? compiler can't seem to deduce <F32 as Lf<'a>>::Type == f32 nor <RefI32 as Lf<'a>>::Type == &'a i32\r\n    let mut v1 = Vec::<Box<for<'a> FnMut(<F32 as Lf<'a>>::Type)>>::new();\r\n    let mut v2 = Vec::<Box<for<'a> FnMut(<RefI32 as Lf<'a>>::Type)>>::new();\r\n    add_closure::<F32>(&mut v1);\r\n    add_closure::<RefI32>(&mut v2);\r\n}\r\n```\r\n\r\nThis crashes both on stable and latest nightly.\r\n\r\n```\r\nerror: internal compiler error: src/librustc/traits/codegen/mod.rs:55: Encountered error `OutputTypeParameterMismatch(Binder(<[closure@src/main.rs:10:21: 11:6] as std::ops::FnMut<(<F32 as Lf<'_>>::Type,)>>), Binder(<[closure@src/main.rs:10:21: 11:6] as std::ops::FnMut<(f32,)>>), Sorts(ExpectedFound { expected: f32, found: <F32 as Lf<'_>>::Type }))` selecting `Binder(<[closure@src/main.rs:10:21: 11:6] as std::ops::FnMut<(f32,)>>)` during codegen\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:646:9\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\r\nerror: aborting due to previous error\r\n```\r\n\r\n[**Playground**](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=4e5f020fab2c606cbfb0a19d6c7f7b3a)\r\n"
  }
]
